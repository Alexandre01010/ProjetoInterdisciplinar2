{"remainingRequest":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\components\\SideBar.vue?vue&type=template&id=3eca7188&scoped=true&","dependencies":[{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\components\\SideBar.vue","mtime":1623333003464},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}