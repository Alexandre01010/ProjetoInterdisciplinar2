{"remainingRequest":"C:\\Users\\fabia\\OneDrive\\Ambiente de Trabalho\\esmad fixo\\webp2\\front end consumo api\\ProjetoInterdisciplinar2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\fabia\\OneDrive\\Ambiente de Trabalho\\esmad fixo\\webp2\\front end consumo api\\ProjetoInterdisciplinar2\\src\\components\\SideBar.vue?vue&type=template&id=3eca7188&scoped=true&","dependencies":[{"path":"C:\\Users\\fabia\\OneDrive\\Ambiente de Trabalho\\esmad fixo\\webp2\\front end consumo api\\ProjetoInterdisciplinar2\\src\\components\\SideBar.vue","mtime":1621981299259},{"path":"C:\\Users\\fabia\\OneDrive\\Ambiente de Trabalho\\esmad fixo\\webp2\\front end consumo api\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\OneDrive\\Ambiente de Trabalho\\esmad fixo\\webp2\\front end consumo api\\ProjetoInterdisciplinar2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\OneDrive\\Ambiente de Trabalho\\esmad fixo\\webp2\\front end consumo api\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\OneDrive\\Ambiente de Trabalho\\esmad fixo\\webp2\\front end consumo api\\ProjetoInterdisciplinar2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}