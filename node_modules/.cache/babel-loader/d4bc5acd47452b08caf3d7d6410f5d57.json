{"remainingRequest":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\services\\auth.service.js","dependencies":[{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\services\\auth.service.js","mtime":1622823385237},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2ZhYmlhL0Rlc2t0b3AvZXNtYWQvcHcyL3Byb2pldG8gY29uc3Vtby9Qcm9qZXRvSW50ZXJkaXNjaXBsaW5hcjIvUHJvamV0b0ludGVyZGlzY2lwbGluYXIyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IEFQSV9VUkwgZnJvbSAnLi9jb25maWcuanMnOwpleHBvcnQgdmFyIEF1dGhTZXJ2aWNlID0gewogIGxvZ2luOiBmdW5jdGlvbiBsb2dpbih1c2VyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzcG9uc2UsIGRhdGE7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KEFQSV9VUkwsICIvc2lnbmluIiksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgICAgICAgICAgICBwYXNzd29yZDogdXNlci5wYXNzd29yZAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygiTE9HSU4gU0VSVklDRSBPSyIpCiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSkKICAgICAgICAgICAgICBpZiAoZGF0YS5hY2Nlc3NUb2tlbikgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXInLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZGF0YSk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dCgpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd1c2VyJyk7CgogICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3Rlcih1c2VyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIHJlc3BvbnNlLCBkYXRhOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXIpOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KEFQSV9VUkwsICIvc2lnbnVwIiksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICAgIC8vIHVzZXJuYW1lOiB1c2VyLm5hbWUsCiAgICAgICAgICAgICAgICAgIC8vIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgICAgICAgICAgICAvLyBwYXNzd29yZDogdXNlci5wYXNzd29yZAogICAgICAgICAgICAgICAgICBub21lOiB1c2VyLm5vbWUsCiAgICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgICAgICAgICAgICBwYXNzd29yZDogdXNlci5wYXNzd29yZCwKICAgICAgICAgICAgICAgICAgaWRfdGlwb191c2VyOiB1c2VyLnNlbGVjdGVkLAogICAgICAgICAgICAgICAgICBjdjogdXNlci5jdiwKICAgICAgICAgICAgICAgICAgZm90bzogdXNlci5pbWcKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA3OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBkYXRhKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY29uc29sZS5sb2coRXJyb3IpOwogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9Cn07CgpmdW5jdGlvbiBoYW5kbGVSZXNwb25zZXMoY29kZSkgewogIHZhciBtZXNzYWdlID0gIiI7CgogIHN3aXRjaCAoY29kZSkgewogICAgY2FzZSA0MDA6CiAgICAgIG1lc3NhZ2UgPSAiVXNlcm5hbWUgYWxyZWFkeSBleGlzdHMuIjsKICAgICAgYnJlYWs7CgogICAgY2FzZSA0MDE6CiAgICAgIG1lc3NhZ2UgPSAiV3JvbmcgY3JlZGVudGlhbHMiOwogICAgICBicmVhazsKCiAgICBjYXNlIDQwNDoKICAgICAgbWVzc2FnZSA9ICJVc2VyIG5vdCBmb3VuZCI7CiAgICAgIGJyZWFrOwoKICAgIGRlZmF1bHQ6CiAgICAgIG1lc3NhZ2UgPSAiVW5rb3duIG1lc3NhZ2UiOwogICAgICBicmVhazsKICB9CgogIHJldHVybiBtZXNzYWdlOwp9CgpleHBvcnQgZGVmYXVsdCBBdXRoU2VydmljZTs="},{"version":3,"sources":["C:/Users/fabia/Desktop/esmad/pw2/projeto consumo/ProjetoInterdisciplinar2/ProjetoInterdisciplinar2/src/services/auth.service.js"],"names":["API_URL","AuthService","login","user","fetch","method","headers","body","JSON","stringify","email","password","response","ok","json","data","accessToken","localStorage","setItem","Error","handleResponses","status","logout","removeItem","register","console","log","nome","id_tipo_user","selected","cv","foto","img","code","message"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,aAApB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACjBC,EAAAA,KADiB,iBACXC,IADW,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSC,KAAK,WAAIJ,OAAJ,cAAsB;AAC9CK,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAFqC;AAK9CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,kBAAAA,KAAK,EAAEP,IAAI,CAACO,KADK;AAEjBC,kBAAAA,QAAQ,EAAER,IAAI,CAACQ;AAFE,iBAAf;AALwC,eAAtB,CADd;;AAAA;AACRC,cAAAA,QADQ;;AAAA,mBAWVA,QAAQ,CAACC,EAXC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAYSD,QAAQ,CAACE,IAAT,EAZT;;AAAA;AAYJC,cAAAA,IAZI;AAaV;AACA;AACA,kBAAIA,IAAI,CAACC,WAAT,EACIC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BV,IAAI,CAACC,SAAL,CAAeM,IAAf,CAA7B;AAhBM,+CAiBHA,IAjBG;;AAAA;AAAA,oBAmBJI,KAAK,CAACC,eAAe,CAACR,QAAQ,CAACS,MAAV,CAAhB,CAnBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBjB,GAtBsB;AAwBjBC,EAAAA,MAxBiB,oBAwBR;AAAA;AAAA;AAAA;AAAA;AAAA;AACXL,cAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEd,GA1BsB;AA4BjBC,EAAAA,QA5BiB,oBA4BRrB,IA5BQ,EA4BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBsB,cAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AADiB;AAAA,qBAEMC,KAAK,WAAIJ,OAAJ,cAAsB;AAC9CK,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAFqC;AAK9CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB;AACA;AACA;AACAkB,kBAAAA,IAAI,EAAExB,IAAI,CAACwB,IAJM;AAKjBjB,kBAAAA,KAAK,EAAEP,IAAI,CAACO,KALK;AAMjBC,kBAAAA,QAAQ,EAAGR,IAAI,CAACQ,QANC;AAOjBiB,kBAAAA,YAAY,EAAEzB,IAAI,CAAC0B,QAPF;AAQjBC,kBAAAA,EAAE,EAAE3B,IAAI,CAAC2B,EARQ;AASjBC,kBAAAA,IAAI,EAAE5B,IAAI,CAAC6B;AATM,iBAAf;AALwC,eAAtB,CAFX;;AAAA;AAEXpB,cAAAA,QAFW;;AAAA,mBAmBbA,QAAQ,CAACC,EAnBI;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAoBMD,QAAQ,CAACE,IAAT,EApBN;;AAAA;AAoBPC,cAAAA,IApBO;AAAA,gDAqBNA,IArBM;;AAAA;AAuBbU,cAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAvBa,oBAwBPA,KAAK,CAACC,eAAe,CAACR,QAAQ,CAACS,MAAV,CAAhB,CAxBE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BpB;AAtDsB,CAApB;;AA0DP,SAASD,eAAT,CAAyBa,IAAzB,EAA+B;AAC3B,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQD,IAAR;AACI,SAAK,GAAL;AACIC,MAAAA,OAAO,GAAG,0BAAV;AACA;;AACJ,SAAK,GAAL;AACIA,MAAAA,OAAO,GAAG,mBAAV;AACA;;AACJ,SAAK,GAAL;AACIA,MAAAA,OAAO,GAAG,gBAAV;AACA;;AACJ;AACIA,MAAAA,OAAO,GAAG,gBAAV;AACA;AAZR;;AAcA,SAAOA,OAAP;AACH;;AAED,eAAejC,WAAf","sourcesContent":["import API_URL from './config.js'\r\n\r\nexport const AuthService = {\r\n    async login(user) { // payload = user (username + password)\r\n        const response = await fetch(`${API_URL}/signin`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify({\r\n                email: user.email,\r\n                password: user.password\r\n            })\r\n        });\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            // console.log(\"LOGIN SERVICE OK\")\r\n            // console.log(data)\r\n            if (data.accessToken)\r\n                localStorage.setItem('user', JSON.stringify(data));\r\n            return data;\r\n        } else {\r\n            throw Error(handleResponses(response.status));\r\n        }\r\n    },\r\n\r\n    async logout() {\r\n        localStorage.removeItem('user');\r\n    },\r\n\r\n    async register(user) {\r\n        console.log(user)\r\n        const response = await fetch(`${API_URL}/signup`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify({\r\n                // username: user.name,\r\n                // email: user.email,\r\n                // password: user.password\r\n                nome: user.nome,\r\n                email: user.email,\r\n                password:  user.password,\r\n                id_tipo_user: user.selected,\r\n                cv: user.cv,\r\n                foto: user.img\r\n            })\r\n        });\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data;\r\n        } else {\r\n            console.log(Error)\r\n            throw Error(handleResponses(response.status));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction handleResponses(code) {\r\n    let message = \"\";\r\n    switch (code) {\r\n        case 400:\r\n            message = \"Username already exists.\";\r\n            break;\r\n        case 401:\r\n            message = \"Wrong credentials\";\r\n            break;\r\n        case 404:\r\n            message = \"User not found\";\r\n            break;\r\n        default:\r\n            message = \"Unkown message\";\r\n            break;\r\n    }\r\n    return message;\r\n}\r\n\r\nexport default AuthService;"]}]}