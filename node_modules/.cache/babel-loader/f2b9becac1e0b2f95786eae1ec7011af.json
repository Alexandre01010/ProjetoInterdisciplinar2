{"remainingRequest":"D:\\Users\\gonal\\Desktop\\ProjetoInterdisciplinar2-1\\node_modules\\babel-loader\\lib\\index.js!D:\\Users\\gonal\\Desktop\\ProjetoInterdisciplinar2-1\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Users\\gonal\\Desktop\\ProjetoInterdisciplinar2-1\\src\\services\\auth.service.js","dependencies":[{"path":"D:\\Users\\gonal\\Desktop\\ProjetoInterdisciplinar2-1\\src\\services\\auth.service.js","mtime":1623345331159},{"path":"D:\\Users\\gonal\\Desktop\\ProjetoInterdisciplinar2-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623345287573},{"path":"D:\\Users\\gonal\\Desktop\\ProjetoInterdisciplinar2-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1623345281102},{"path":"D:\\Users\\gonal\\Desktop\\ProjetoInterdisciplinar2-1\\node_modules\\eslint-loader\\index.js","mtime":1623345298404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1VzZXJzL2dvbmFsL0Rlc2t0b3AvUHJvamV0b0ludGVyZGlzY2lwbGluYXIyLTEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgQVBJX1VSTCBmcm9tICcuL2NvbmZpZy5qcyc7CmV4cG9ydCB2YXIgQXV0aFNlcnZpY2UgPSB7CiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKHVzZXIpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXNwb25zZSwgZGF0YTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi9zaWduaW4iKSwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04IgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsCiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB1c2VyLnBhc3N3b3JkCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJMT0dJTiBTRVJWSUNFIE9LIikKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKQogICAgICAgICAgICAgIGlmIChkYXRhLmFjY2Vzc1Rva2VuKSBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcicsIEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBkYXRhKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXInKTsKCiAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgcmVnaXN0ZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyKHVzZXIpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgcmVzcG9uc2UsIGRhdGE7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29uc29sZS5sb2codXNlcik7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi9zaWdudXAiKSwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04IgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgICAgLy8gdXNlcm5hbWU6IHVzZXIubmFtZSwKICAgICAgICAgICAgICAgICAgLy8gZW1haWw6IHVzZXIuZW1haWwsCiAgICAgICAgICAgICAgICAgIC8vIHBhc3N3b3JkOiB1c2VyLnBhc3N3b3JkCiAgICAgICAgICAgICAgICAgIG5vbWU6IHVzZXIubm9tZSwKICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsCiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB1c2VyLnBhc3N3b3JkLAogICAgICAgICAgICAgICAgICBpZF90aXBvX3VzZXI6IHVzZXIuc2VsZWN0ZWQsCiAgICAgICAgICAgICAgICAgIGN2OiB1c2VyLmN2LAogICAgICAgICAgICAgICAgICBmb3RvOiB1c2VyLmltZwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIGRhdGEpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhFcnJvcik7CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0KfTsKCmZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlcyhjb2RlKSB7CiAgdmFyIG1lc3NhZ2UgPSAiIjsKCiAgc3dpdGNoIChjb2RlKSB7CiAgICBjYXNlIDQwMDoKICAgICAgbWVzc2FnZSA9ICJVc2VybmFtZSBhbHJlYWR5IGV4aXN0cy4iOwogICAgICBicmVhazsKCiAgICBjYXNlIDQwMToKICAgICAgbWVzc2FnZSA9ICJXcm9uZyBjcmVkZW50aWFscyI7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgNDA0OgogICAgICBtZXNzYWdlID0gIlVzZXIgbm90IGZvdW5kIjsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgbWVzc2FnZSA9ICJVbmtvd24gbWVzc2FnZSI7CiAgICAgIGJyZWFrOwogIH0KCiAgcmV0dXJuIG1lc3NhZ2U7Cn0KCmV4cG9ydCBkZWZhdWx0IEF1dGhTZXJ2aWNlOw=="},{"version":3,"sources":["D:/Users/gonal/Desktop/ProjetoInterdisciplinar2-1/src/services/auth.service.js"],"names":["API_URL","AuthService","login","user","fetch","method","headers","body","JSON","stringify","email","password","response","ok","json","data","accessToken","localStorage","setItem","Error","handleResponses","status","logout","removeItem","register","console","log","nome","id_tipo_user","selected","cv","foto","img","code","message"],"mappings":"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","sourcesContent":["import API_URL from './config.js'\r\n\r\nexport const AuthService = {\r\n    async login(user) { // payload = user (username + password)\r\n        const response = await fetch(`${API_URL}/signin`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify({\r\n                email: user.email,\r\n                password: user.password\r\n            })\r\n        });\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            // console.log(\"LOGIN SERVICE OK\")\r\n            // console.log(data)\r\n            if (data.accessToken)\r\n                localStorage.setItem('user', JSON.stringify(data));\r\n            return data;\r\n        } else {\r\n            throw Error(handleResponses(response.status));\r\n        }\r\n    },\r\n\r\n    async logout() {\r\n        localStorage.removeItem('user');\r\n    },\r\n\r\n    async register(user) {\r\n        console.log(user)\r\n        const response = await fetch(`${API_URL}/signup`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\"\r\n            },\r\n            body: JSON.stringify({\r\n                // username: user.name,\r\n                // email: user.email,\r\n                // password: user.password\r\n                nome: user.nome,\r\n                email: user.email,\r\n                password:  user.password,\r\n                id_tipo_user: user.selected,\r\n                cv: user.cv,\r\n                foto: user.img\r\n            })\r\n        });\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return data;\r\n        } else {\r\n            console.log(Error)\r\n            throw Error(handleResponses(response.status));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction handleResponses(code) {\r\n    let message = \"\";\r\n    switch (code) {\r\n        case 400:\r\n            message = \"Username already exists.\";\r\n            break;\r\n        case 401:\r\n            message = \"Wrong credentials\";\r\n            break;\r\n        case 404:\r\n            message = \"User not found\";\r\n            break;\r\n        default:\r\n            message = \"Unkown message\";\r\n            break;\r\n    }\r\n    return message;\r\n}\r\n\r\nexport default AuthService;"]}]}