{"remainingRequest":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","mtime":1623204779865},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/fabia/Desktop/esmad/pw2/projeto consumo/ProjetoInterdisciplinar2/ProjetoInterdisciplinar2/src/store/index.js"],"names":["Vue","Vuex","axios","AuthService","use","resource_uri","Store","state","ProposalUser","users","loggedUser","localStorage","getItem","JSON","parse","proposals","applications","proposal","foruns","notifications","getters","getForuns","search","filter","forum","titulo","includes","getPretendedUserName","getNextProposalId","length","id","getNextnotificationId","getMyCandidaturas","getProposalTitle","getUsers","getLoggedUser","username","isLoggedUser","getProposals","getFilterdProposals","type","stateF","type2","card_filter","nome_entidade","toUpperCase","prop","id_tipo_estado","getType","tipo","getNotification","actions","fetchMyForuns","context","get","headers","accessToken","response","commit","data","fetchMyProposals","putUpdateCandidatura","payload","put","id_proposta","fetchUserById","fetchProposals","fetchProposalById","fetchMyCandidaturas","console","log","eliminar","setItem","stringify","login","logout","removeItem","register","user","find","email","undefined","registerProposal","post","registerNotification","aprovar","proposta","edited","estado","orientador","form","revisao","msgRevisao","candidatar","application","mensagem","candidatura","mutations","SETFORUNS","SETUSER","nome","SETPROPOSALS","SETPROPOSAL","DELETEPROPOSAL","CANDIDATURA","push","ALTERARPROP","map","LOGIN","LOGOUT","REGISTER","REGISTERPROPOSAL","REGISTERNOTIFICATION","notif","SETMYCANDIDATURAS"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n//import { UserService } from \"@/services/user.service\";\r\nimport { AuthService } from \"@/services/auth.service\";\r\n\r\nVue.use(Vuex);\r\nconst resource_uri = \"http://localhost:8080\";\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ProposalUser: \"\",\r\n    users: [],\r\n    loggedUser: localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : \"\",\r\n    proposals: [],\r\n    applications: [],\r\n    proposal: \"\",\r\n    foruns: [],\r\n\r\n    notifications: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : [],\r\n  },\r\n  getters: {\r\n    getForuns: (state) =>(search)=> {\r\n      if (search) {\r\n        return state.foruns.filter(forum=>forum.titulo.includes(search));\r\n      }\r\n      return state.foruns;\r\n    },\r\n    getPretendedUserName: (state) => {\r\n      return state.ProposalUser;\r\n    },\r\n    getNextProposalId: (state) => {\r\n      return state.proposals.length > 0\r\n        ? state.proposals[state.proposals.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getNextnotificationId: (state) => {\r\n      return state.notifications.length > 0\r\n        ? state.notifications[state.notifications.length - 1].id + 1\r\n        : 1;\r\n    },\r\n\r\n    getMyCandidaturas: (state) => {\r\n      return state.applications;\r\n    },\r\n    getProposalTitle: (state) => {\r\n      return state.proposal;\r\n    },\r\n    getUsers: (state) => state.users,\r\n    getLoggedUser: (state) => state.loggedUser.username,\r\n    isLoggedUser: (state) => (state.loggedUser == \"\" ? false : true),\r\n    getProposals: (state) => {\r\n      return state.proposals;\r\n    },\r\n    getFilterdProposals: (state) => (type, search, stateF) => {\r\n      let type2;\r\n      if (type != \"all\") {\r\n        type2 = type == \"estagio\" ? false : true;\r\n      }\r\n      let card_filter = state.proposals.filter(\r\n        (proposal) =>\r\n          ((proposal.nome_entidade == null) == type2 || type == \"all\") &&\r\n          (proposal.titulo.toUpperCase().includes(search.toUpperCase()) ||\r\n            search == \"\")\r\n      );\r\n      if (stateF == 1 || stateF == 2 || stateF == 3) {\r\n        card_filter = card_filter.filter(\r\n          (prop) => prop.id_tipo_estado == stateF\r\n        );\r\n      }\r\n      return card_filter;\r\n    },\r\n    getType: (state) => {\r\n      return state.proposals.tipo;\r\n    },\r\n    getNotification: (state) => {\r\n      return state.notifications;\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchMyForuns(context){\r\n      const response = await axios.get(resource_uri + \"/foruns\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETFORUNS\", response.data);\r\n    },\r\n    async fetchMyProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async putUpdateCandidatura(context, payload) {\r\n        await axios.put(resource_uri + '/propostas/' +  payload.id_proposta + '/candidaturas' , payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async fetchUserById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/users/\" + id);\r\n      context.commit(\"SETUSER\", response.data);\r\n      //context.commit(\"SETUSER\", response.data);\r\n    },\r\n    async fetchProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/approved\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async fetchProposalById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/propostas/\" + id);\r\n      context.commit(\"SETPROPOSAL\", response.data);\r\n    },\r\n    async fetchMyCandidaturas(context) {\r\n      const response = await axios.get(resource_uri + \"/candidaturas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      context.commit(\"SETMYCANDIDATURAS\", response.data);\r\n    },\r\n    async eliminar(context, id) {\r\n      context.commit(\"DELETEPROPOSAL\", id);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async login(context, payload) {\r\n      try {\r\n        const loggedUser = await AuthService.login(payload);\r\n        console.log(loggedUser);\r\n        context.commit(\"LOGIN\", loggedUser);\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n      // verificar se este user já existe\r\n      // const user = context.state.users.find(\r\n      //   (user) =>\r\n      //     user.email === payload.email && user.password === payload.password\r\n      // );\r\n      // if (user != undefined) {\r\n      //   // login com sucesso\r\n      //   context.commit(\"LOGIN\", user);\r\n      //   localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n      // } else {\r\n      //   throw \"O seu email ou password estão incorretos\";\r\n      // }\r\n    },\r\n    async logout(context) {\r\n      context.commit(\"LOGOUT\");\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async register(context, payload) {\r\n      // verificar se este user já existe\r\n      const user = context.state.users.find(\r\n        (user) => user.email === payload.email\r\n      );\r\n      if (user == undefined) {\r\n        let response = await AuthService.register(payload);\r\n\r\n        context.commit(\"REGISTER\", response);\r\n        //localStorage.setItem(\"users\", JSON.stringify(context.state.users));\r\n      } else {\r\n        return \"Email já existente\";\r\n      }\r\n    },\r\n    async registerProposal(context, payload) {\r\n      const proposal = context.state.proposals.find(\r\n        (proposal) => proposal.titulo == payload.titulo\r\n      );\r\n      if (proposal == undefined) {\r\n        console.log(payload);\r\n        let response = await axios.post(resource_uri + \"/propostas\", payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        //let proposal = payload\r\n        //proposal['id_proposta']=response.\r\n        // console.log(proposal);\r\n        context.commit(\"REGISTERPROPOSAL\", proposal);\r\n        //localStorage.setItem('proposals', JSON.stringify(context.state.proposals))\r\n      } else {\r\n        throw \"Proposta já criada! Por favor reveja os campos\";\r\n      }\r\n    },\r\n\r\n    async registerNotification(context, payload) {\r\n      context.commit(\"REGISTERNOTIFICATION\", payload);\r\n      localStorage.setItem(\r\n        \"notification\",\r\n        JSON.stringify(context.state.notifications)\r\n      );\r\n    },\r\n\r\n    async aprovar(context, data) {\r\n      console.log(data.proposta);\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"aprovado\";\r\n      edited.orientador = data.form.orientador;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async revisao(context, data) {\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"revisao\";\r\n      edited.msgRevisao = data.form.revisao;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async candidatar(context, data) {\r\n      let application = {\r\n        user: data.form.user,\r\n        id_proposta: data.proposta.id,\r\n        mensagem: data.form.candidatura,\r\n      };\r\n      //console.log(application)\r\n      context.commit(\"CANDIDATURA\", application);\r\n      localStorage.setItem(\r\n        \"applications\",\r\n        JSON.stringify(context.state.applications)\r\n      );\r\n    },\r\n  },\r\n  mutations: {\r\n    SETFORUNS(state,data){state.foruns=data},\r\n    SETUSER(state, data) {\r\n      state.ProposalUser = data.nome;\r\n    },\r\n    SETPROPOSALS(state, data) {\r\n      state.proposals = data;\r\n    },\r\n    SETPROPOSAL(state, data) {\r\n      state.proposal = data.titulo;\r\n    },\r\n    DELETEPROPOSAL(state, id) {\r\n      state.proposals = state.proposals.filter((proposal) => proposal.id != id);\r\n    },\r\n    CANDIDATURA(state, data) {\r\n      state.applications.push(data);\r\n    },\r\n    ALTERARPROP(state, data) {\r\n      console.log(data);\r\n      state.proposals = state.proposals.map((proposal) =>\r\n        proposal.id == data.id ? data : proposal\r\n      );\r\n    },\r\n    LOGIN(state, user) {\r\n      state.loggedUser = user;\r\n    },\r\n    LOGOUT(state) {\r\n      state.loggedUser = \"\";\r\n    },\r\n    REGISTER(state, user) {\r\n      state.users.push(user);\r\n    },\r\n    REGISTERPROPOSAL(state, proposal) {\r\n      state.proposals.push(proposal);\r\n    },\r\n    REGISTERNOTIFICATION(state, notif) {\r\n      state.notifications.push(notif);\r\n    },\r\n    SETMYCANDIDATURAS(state, proposals) {\r\n      console.log(\"Aqui é commit \" + proposals);\r\n      state.applications = proposals;\r\n      console.log(proposals);\r\n    },\r\n  },\r\n});\r\n"]}]}