{"remainingRequest":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","mtime":1623292597752},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/fabia/Desktop/esmad/pw2/projeto consumo/ProjetoInterdisciplinar2/ProjetoInterdisciplinar2/src/store/index.js"],"names":["Vue","Vuex","axios","AuthService","use","resource_uri","Store","state","ProposalUser","users","loggedUser","localStorage","getItem","JSON","parse","proposals","applications","proposal","foruns","temas","answers","notifications","getters","getForuns","search","filter","forum","titulo","includes","getPretendedUserName","getNextProposalId","length","id","getNextnotificationId","getFilterdAnswers","answer","texto_resposta","getFilterdtemas","tema","getMyCandidaturas","getProposalTitle","getUsers","getLoggedUser","username","isLoggedUser","getProposals","getFilterdProposals","type","stateF","type2","card_filter","nome_entidade","toUpperCase","prop","id_tipo_estado","getType","tipo","getNotification","actions","createForum","context","payload","post","headers","accessToken","response","commit","data","fetchAnswers","get","id_tema","fetchTemasByIdForum","id_forum","fetchMyForuns","fetchMyProposals","putUpdateCandidatura","put","id_proposta","putUpdateProposal","putAproveProposal","console","log","deleteMyCandidatura","delete","fetchUserById","deleteProposals","fetchUserByType","fetchProposals","fetchProposalById","fetchPorposalForApproval","fetchMyCandidaturas","eliminar","setItem","stringify","login","logout","removeItem","register","user","find","email","undefined","registerProposal","registerNotification","aprovar","proposta","edited","estado","orientador","form","revisao","msgRevisao","candidatar","application","mensagem","candidatura","mutations","SETRESP","SETTEMAS","SETFORUNS","SETUSER","SETUSERTYPE","SETPROPOSALS","SETPROPOSALBYSTATE","SETPROPOSAL","DELETEPROPOSAL","CANDIDATURA","push","ALTERARPROP","map","LOGIN","LOGOUT","REGISTER","REGISTERPROPOSAL","REGISTERNOTIFICATION","notif","SETMYCANDIDATURAS"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n//import { UserService } from \"@/services/user.service\";\r\nimport { AuthService } from \"@/services/auth.service\";\r\n\r\nVue.use(Vuex);\r\nconst resource_uri = \"http://localhost:8080\";\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ProposalUser: \"\",\r\n    users: [],\r\n    loggedUser: localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : \"\",\r\n    proposals: [],\r\n    applications: [],\r\n    proposal: \"\",\r\n    foruns: [],\r\n    temas:[],\r\n    answers:[],\r\n    notifications: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : [],\r\n  },\r\n  getters: {\r\n    getForuns: (state) =>(search)=> {\r\n      if (search) {\r\n        return state.foruns.filter(forum=>forum.titulo.includes(search));\r\n      }\r\n      return state.foruns;\r\n    },\r\n    getPretendedUserName: (state) => {\r\n      return state.ProposalUser;\r\n    },\r\n    getNextProposalId: (state) => {\r\n      return state.proposals.length > 0\r\n        ? state.proposals[state.proposals.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getNextnotificationId: (state) => {\r\n      return state.notifications.length > 0\r\n        ? state.notifications[state.notifications.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getFilterdAnswers:(state)=>(search)=>{\r\n      if(search){\r\n        return state.answers.filter(answer=>answer.texto_resposta.includes(search))\r\n      }\r\n      return state.answers\r\n    },\r\n    getFilterdtemas:(state)=>(search)=>{\r\n      if (search) {\r\n        return state.temas.filter(tema=>tema.titulo.includes(search));\r\n      }\r\n      return state.temas;\r\n    },\r\n    getMyCandidaturas: (state) => {\r\n      return state.applications;\r\n    },\r\n    getProposalTitle: (state) => {\r\n      return state.proposal;\r\n    },\r\n    getUsers: (state) => state.users,\r\n    getLoggedUser: (state) => state.loggedUser.username,\r\n    isLoggedUser: (state) => (state.loggedUser == \"\" ? false : true),\r\n    getProposals: (state) => {\r\n      return state.proposals;\r\n    },\r\n    getFilterdProposals: (state) => (type, search, stateF) => {\r\n      let type2;\r\n      if (type != \"all\") {\r\n        type2 = type == \"estagio\" ? false : true;\r\n      }\r\n      let card_filter = state.proposals.filter(\r\n        (proposal) =>\r\n          ((proposal.nome_entidade == null) == type2 || type == \"all\") &&\r\n          (proposal.titulo.toUpperCase().includes(search.toUpperCase()) ||\r\n            search == \"\")\r\n      );\r\n      if (stateF == 1 || stateF == 2 || stateF == 3) {\r\n        card_filter = card_filter.filter(\r\n          (prop) => prop.id_tipo_estado == stateF\r\n        );\r\n      }\r\n      return card_filter;\r\n    },\r\n    getType: (state) => {\r\n      return state.proposals.tipo;\r\n    },\r\n    getNotification: (state) => {\r\n      return state.notifications;\r\n    },\r\n  },\r\n  actions: {\r\n    async createForum(context,payload){\r\n      try{\r\n        \r\n        const response = await axios.post(resource_uri + \"/foruns\",payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n          \r\n        });\r\n        \r\n        \r\n        context.commit(\"SETRESP\", response.data);\r\n      }catch(error){\r\n        context.commit('SETRESP', [])\r\n      }\r\n\r\n    },\r\n\r\n\r\n\r\n    async fetchAnswers(context,payload){\r\n      try{\r\n        \r\n        const response = await axios.get(resource_uri + \"/foruns/temas/\"+payload.id_tema+\"/respostas\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        \r\n        context.commit(\"SETRESP\", response.data);\r\n      }catch(error){\r\n        context.commit('SETRESP', [])\r\n      }\r\n    },\r\n    async fetchTemasByIdForum(context,payload){\r\n      try{\r\n        const response = await axios.get(resource_uri + \"/foruns/\"+payload.id_forum+\"/temas/\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        context.commit(\"SETTEMAS\", response.data);\r\n      }catch(error){\r\n        context.commit('SETTEMAS', [])\r\n      }\r\n    },\r\n    async fetchMyForuns(context){\r\n      const response = await axios.get(resource_uri + \"/foruns\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETFORUNS\", response.data);\r\n    },\r\n    async fetchMyProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async putUpdateCandidatura(context, payload) {\r\n        await axios.put(resource_uri + '/propostas/' +  payload.id_proposta + '/candidaturas' , payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async putUpdateProposal(context, payload) {\r\n      await axios.put(resource_uri + '/propostas/' + payload.id_proposta + '/data', payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async putAproveProposal(context, payload) {\r\n      console.log(payload)\r\n      await axios.put(resource_uri + '/propostas/' + payload.id_proposta + '/data', payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async deleteMyCandidatura(context, payload) {\r\n      await axios.delete(resource_uri + '/propostas/' + payload.id_proposta + '/candidaturas', {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async fetchUserById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/users/\" + id);\r\n      context.commit(\"SETUSER\", response.data);\r\n      //context.commit(\"SETUSER\", response.data);\r\n    },\r\n\r\n    async deleteProposals(context, payload) {\r\n      await axios.delete(resource_uri + '/propostas/' + payload.id_proposta, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n\r\n     async fetchUserByType(context, id) {\r\n       const response = await axios.get(resource_uri + \"/users?idTipoUser=\" + id, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n       })\r\n       context.commit(\"SETUSERTYPE\", response.data)\r\n     },\r\n    async fetchProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/approved\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async fetchProposalById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/propostas/\" + id);\r\n      context.commit(\"SETPROPOSAL\", response.data);\r\n    },\r\n    async fetchPorposalForApproval(context){\r\n      const response = await axios.get(resource_uri + \"/propostas/pending\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n      context.commit(\"SETPROPOSALBYSTATE\", response.data)\r\n    },\r\n    async fetchMyCandidaturas(context) {\r\n      const response = await axios.get(resource_uri + \"/candidaturas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      context.commit(\"SETMYCANDIDATURAS\", response.data);\r\n    },\r\n    async eliminar(context, id) {\r\n      context.commit(\"DELETEPROPOSAL\", id);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async login(context, payload) {\r\n      try {\r\n        const loggedUser = await AuthService.login(payload);\r\n        console.log(loggedUser);\r\n        context.commit(\"LOGIN\", loggedUser);\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n      // verificar se este user já existe\r\n      // const user = context.state.users.find(\r\n      //   (user) =>\r\n      //     user.email === payload.email && user.password === payload.password\r\n      // );\r\n      // if (user != undefined) {\r\n      //   // login com sucesso\r\n      //   context.commit(\"LOGIN\", user);\r\n      //   localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n      // } else {\r\n      //   throw \"O seu email ou password estão incorretos\";\r\n      // }\r\n    },\r\n    async logout(context) {\r\n      context.commit(\"LOGOUT\");\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async register(context, payload) {\r\n      // verificar se este user já existe\r\n      const user = context.state.users.find(\r\n        (user) => user.email === payload.email\r\n      );\r\n      if (user == undefined) {\r\n        let response = await AuthService.register(payload);\r\n\r\n        context.commit(\"REGISTER\", response);\r\n        //localStorage.setItem(\"users\", JSON.stringify(context.state.users));\r\n      } else {\r\n        return \"Email já existente\";\r\n      }\r\n    },\r\n    async registerProposal(context, payload) {\r\n      const proposal = context.state.proposals.find(\r\n        (proposal) => proposal.titulo == payload.titulo\r\n      );\r\n      if (proposal == undefined) {\r\n        console.log(payload);\r\n        let response = await axios.post(resource_uri + \"/propostas\", payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        //let proposal = payload\r\n        //proposal['id_proposta']=response.\r\n        // console.log(proposal);\r\n        context.commit(\"REGISTERPROPOSAL\", proposal);\r\n        //localStorage.setItem('proposals', JSON.stringify(context.state.proposals))\r\n      } else {\r\n        throw \"Proposta já criada! Por favor reveja os campos\";\r\n      }\r\n    },\r\n\r\n    async registerNotification(context, payload) {\r\n      context.commit(\"REGISTERNOTIFICATION\", payload);\r\n      localStorage.setItem(\r\n        \"notification\",\r\n        JSON.stringify(context.state.notifications)\r\n      );\r\n    },\r\n\r\n    async aprovar(context, data) {\r\n      console.log(data.proposta);\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"aprovado\";\r\n      edited.orientador = data.form.orientador;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async revisao(context, data) {\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"revisao\";\r\n      edited.msgRevisao = data.form.revisao;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async candidatar(context, data) {\r\n      let application = {\r\n        user: data.form.user,\r\n        id_proposta: data.proposta.id,\r\n        mensagem: data.form.candidatura,\r\n      };\r\n      //console.log(application)\r\n      context.commit(\"CANDIDATURA\", application);\r\n      localStorage.setItem(\r\n        \"applications\",\r\n        JSON.stringify(context.state.applications)\r\n      );\r\n    },\r\n  },\r\n  mutations: {\r\n    SETRESP(state,data){state.answers=data},\r\n    SETTEMAS(state,data){state.temas=data},\r\n    SETFORUNS(state,data){state.foruns=data},\r\n    SETUSER(state, data) {\r\n      state.ProposalUser = data;\r\n    },\r\n    SETUSERTYPE(state, data){\r\n      state.users = data\r\n    },\r\n    SETPROPOSALS(state, data) {\r\n      state.proposals = data;\r\n    },\r\n    SETPROPOSALBYSTATE(state, data) {\r\n      state.proposals = data\r\n    },\r\n    SETPROPOSAL(state, data) {\r\n      state.proposal = data.titulo;\r\n    },\r\n    DELETEPROPOSAL(state, id) {\r\n      state.proposals = state.proposals.filter((proposal) => proposal.id != id);\r\n    },\r\n    CANDIDATURA(state, data) {\r\n      state.applications.push(data);\r\n    },\r\n    ALTERARPROP(state, data) {\r\n      console.log(data);\r\n      state.proposals = state.proposals.map((proposal) =>\r\n        proposal.id == data.id ? data : proposal\r\n      );\r\n    },\r\n    LOGIN(state, user) {\r\n      state.loggedUser = user;\r\n    },\r\n    LOGOUT(state) {\r\n      state.loggedUser = \"\";\r\n    },\r\n    REGISTER(state, user) {\r\n      state.users.push(user);\r\n    },\r\n    REGISTERPROPOSAL(state, proposal) {\r\n      state.proposals.push(proposal);\r\n    },\r\n    REGISTERNOTIFICATION(state, notif) {\r\n      state.notifications.push(notif);\r\n    },\r\n    SETMYCANDIDATURAS(state, proposals) {\r\n      console.log(\"Aqui é commit \" + proposals);\r\n      state.applications = proposals;\r\n      console.log(proposals);\r\n    },\r\n  },\r\n});\r\n"]}]}