{"remainingRequest":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","mtime":1623266756952},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/fabia/Desktop/esmad/pw2/projeto consumo/ProjetoInterdisciplinar2/ProjetoInterdisciplinar2/src/store/index.js"],"names":["Vue","Vuex","axios","AuthService","use","resource_uri","Store","state","ProposalUser","users","loggedUser","localStorage","getItem","JSON","parse","proposals","applications","proposal","foruns","temas","notifications","getters","getForuns","search","filter","forum","titulo","includes","getPretendedUserName","getNextProposalId","length","id","getNextnotificationId","getFilterdAnswers","answers","answer","texto_resposta","getFilterdtemas","tema","getMyCandidaturas","getProposalTitle","getUsers","getLoggedUser","username","isLoggedUser","getProposals","getFilterdProposals","type","stateF","type2","card_filter","nome_entidade","toUpperCase","prop","id_tipo_estado","getType","tipo","getNotification","actions","fetchAnswers","context","payload","get","id_tema","headers","accessToken","response","commit","data","fetchTemasByIdForum","id_forum","fetchMyForuns","fetchMyProposals","putUpdateCandidatura","put","id_proposta","putAproveProposal","console","log","deleteMyCandidatura","delete","fetchUserById","fetchUserByType","fetchProposals","fetchProposalById","fetchPorposalForApproval","fetchMyCandidaturas","eliminar","setItem","stringify","login","logout","removeItem","register","user","find","email","undefined","registerProposal","post","registerNotification","aprovar","proposta","edited","estado","orientador","form","revisao","msgRevisao","candidatar","application","mensagem","candidatura","mutations","SETRESP","SETTEMAS","SETFORUNS","SETUSER","SETUSERTYPE","SETPROPOSALS","SETPROPOSALBYSTATE","SETPROPOSAL","DELETEPROPOSAL","CANDIDATURA","push","ALTERARPROP","map","LOGIN","LOGOUT","REGISTER","REGISTERPROPOSAL","REGISTERNOTIFICATION","notif","SETMYCANDIDATURAS"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n//import { UserService } from \"@/services/user.service\";\r\nimport { AuthService } from \"@/services/auth.service\";\r\n\r\nVue.use(Vuex);\r\nconst resource_uri = \"http://localhost:8080\";\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ProposalUser: \"\",\r\n    users: [],\r\n    loggedUser: localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : \"\",\r\n    proposals: [],\r\n    applications: [],\r\n    proposal: \"\",\r\n    foruns: [],\r\n    temas:[],\r\n    \r\n    notifications: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : [],\r\n  },\r\n  getters: {\r\n    getForuns: (state) =>(search)=> {\r\n      if (search) {\r\n        return state.foruns.filter(forum=>forum.titulo.includes(search));\r\n      }\r\n      return state.foruns;\r\n    },\r\n    getPretendedUserName: (state) => {\r\n      return state.ProposalUser;\r\n    },\r\n    getNextProposalId: (state) => {\r\n      return state.proposals.length > 0\r\n        ? state.proposals[state.proposals.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getNextnotificationId: (state) => {\r\n      return state.notifications.length > 0\r\n        ? state.notifications[state.notifications.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getFilterdAnswers:(state)=>(search)=>{\r\n      if(search){\r\n        return state.answers.filter(answer=>answer.texto_resposta.includes(search))\r\n      }\r\n      return state.answers\r\n    },\r\n    getFilterdtemas:(state)=>(search)=>{\r\n      if (search) {\r\n        return state.temas.filter(tema=>tema.titulo.includes(search));\r\n      }\r\n      return state.temas;\r\n    },\r\n    getMyCandidaturas: (state) => {\r\n      return state.applications;\r\n    },\r\n    getProposalTitle: (state) => {\r\n      return state.proposal;\r\n    },\r\n    getUsers: (state) => state.users,\r\n    getLoggedUser: (state) => state.loggedUser.username,\r\n    isLoggedUser: (state) => (state.loggedUser == \"\" ? false : true),\r\n    getProposals: (state) => {\r\n      return state.proposals;\r\n    },\r\n    getFilterdProposals: (state) => (type, search, stateF) => {\r\n      let type2;\r\n      if (type != \"all\") {\r\n        type2 = type == \"estagio\" ? false : true;\r\n      }\r\n      let card_filter = state.proposals.filter(\r\n        (proposal) =>\r\n          ((proposal.nome_entidade == null) == type2 || type == \"all\") &&\r\n          (proposal.titulo.toUpperCase().includes(search.toUpperCase()) ||\r\n            search == \"\")\r\n      );\r\n      if (stateF == 1 || stateF == 2 || stateF == 3) {\r\n        card_filter = card_filter.filter(\r\n          (prop) => prop.id_tipo_estado == stateF\r\n        );\r\n      }\r\n      return card_filter;\r\n    },\r\n    getType: (state) => {\r\n      return state.proposals.tipo;\r\n    },\r\n    getNotification: (state) => {\r\n      return state.notifications;\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchAnswers(context,payload){\r\n      try{\r\n        \r\n        const response = await axios.get(resource_uri + \"/foruns/temas/\"+payload.id_tema+\"/respostas\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        \r\n        context.commit(\"SETRESP\", response.data);\r\n      }catch(error){\r\n        context.commit('SETRESP', [])\r\n      }\r\n    },\r\n    async fetchTemasByIdForum(context,payload){\r\n      try{\r\n        const response = await axios.get(resource_uri + \"/foruns/\"+payload.id_forum+\"/temas/\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        context.commit(\"SETTEMAS\", response.data);\r\n      }catch(error){\r\n        context.commit('SETTEMAS', [])\r\n      }\r\n    },\r\n    async fetchMyForuns(context){\r\n      const response = await axios.get(resource_uri + \"/foruns\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETFORUNS\", response.data);\r\n    },\r\n    async fetchMyProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async putUpdateCandidatura(context, payload) {\r\n        await axios.put(resource_uri + '/propostas/' +  payload.id_proposta + '/candidaturas' , payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async putAproveProposal(context, payload) {\r\n      console.log(payload)\r\n      await axios.put(resource_uri + '/propostas/' + payload.id_proposta + '/data', payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async deleteMyCandidatura(context, payload) {\r\n      await axios.delete(resource_uri + '/propostas/' + payload.id_proposta + '/candidaturas', {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async fetchUserById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/users/\" + id);\r\n      context.commit(\"SETUSER\", response.data);\r\n      //context.commit(\"SETUSER\", response.data);\r\n    },\r\n     async fetchUserByType(context, id) {\r\n       const response = await axios.get(resource_uri + \"/users?idTipoUser=\" + id, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n       })\r\n       context.commit(\"SETUSERTYPE\", response.data)\r\n     },\r\n    async fetchProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/approved\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async fetchProposalById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/propostas/\" + id);\r\n      context.commit(\"SETPROPOSAL\", response.data);\r\n    },\r\n    async fetchPorposalForApproval(context){\r\n      const response = await axios.get(resource_uri + \"/propostas/pending\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n      context.commit(\"SETPROPOSALBYSTATE\", response.data)\r\n    },\r\n    async fetchMyCandidaturas(context) {\r\n      const response = await axios.get(resource_uri + \"/candidaturas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      context.commit(\"SETMYCANDIDATURAS\", response.data);\r\n    },\r\n    async eliminar(context, id) {\r\n      context.commit(\"DELETEPROPOSAL\", id);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async login(context, payload) {\r\n      try {\r\n        const loggedUser = await AuthService.login(payload);\r\n        console.log(loggedUser);\r\n        context.commit(\"LOGIN\", loggedUser);\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n      // verificar se este user já existe\r\n      // const user = context.state.users.find(\r\n      //   (user) =>\r\n      //     user.email === payload.email && user.password === payload.password\r\n      // );\r\n      // if (user != undefined) {\r\n      //   // login com sucesso\r\n      //   context.commit(\"LOGIN\", user);\r\n      //   localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n      // } else {\r\n      //   throw \"O seu email ou password estão incorretos\";\r\n      // }\r\n    },\r\n    async logout(context) {\r\n      context.commit(\"LOGOUT\");\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async register(context, payload) {\r\n      // verificar se este user já existe\r\n      const user = context.state.users.find(\r\n        (user) => user.email === payload.email\r\n      );\r\n      if (user == undefined) {\r\n        let response = await AuthService.register(payload);\r\n\r\n        context.commit(\"REGISTER\", response);\r\n        //localStorage.setItem(\"users\", JSON.stringify(context.state.users));\r\n      } else {\r\n        return \"Email já existente\";\r\n      }\r\n    },\r\n    async registerProposal(context, payload) {\r\n      const proposal = context.state.proposals.find(\r\n        (proposal) => proposal.titulo == payload.titulo\r\n      );\r\n      if (proposal == undefined) {\r\n        console.log(payload);\r\n        let response = await axios.post(resource_uri + \"/propostas\", payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        //let proposal = payload\r\n        //proposal['id_proposta']=response.\r\n        // console.log(proposal);\r\n        context.commit(\"REGISTERPROPOSAL\", proposal);\r\n        //localStorage.setItem('proposals', JSON.stringify(context.state.proposals))\r\n      } else {\r\n        throw \"Proposta já criada! Por favor reveja os campos\";\r\n      }\r\n    },\r\n\r\n    async registerNotification(context, payload) {\r\n      context.commit(\"REGISTERNOTIFICATION\", payload);\r\n      localStorage.setItem(\r\n        \"notification\",\r\n        JSON.stringify(context.state.notifications)\r\n      );\r\n    },\r\n\r\n    async aprovar(context, data) {\r\n      console.log(data.proposta);\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"aprovado\";\r\n      edited.orientador = data.form.orientador;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async revisao(context, data) {\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"revisao\";\r\n      edited.msgRevisao = data.form.revisao;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async candidatar(context, data) {\r\n      let application = {\r\n        user: data.form.user,\r\n        id_proposta: data.proposta.id,\r\n        mensagem: data.form.candidatura,\r\n      };\r\n      //console.log(application)\r\n      context.commit(\"CANDIDATURA\", application);\r\n      localStorage.setItem(\r\n        \"applications\",\r\n        JSON.stringify(context.state.applications)\r\n      );\r\n    },\r\n  },\r\n  mutations: {\r\n    SETRESP(state,data){state.answers=data},\r\n    SETTEMAS(state,data){state.temas=data},\r\n    SETFORUNS(state,data){state.foruns=data},\r\n    SETUSER(state, data) {\r\n      state.ProposalUser = data;\r\n    },\r\n    SETUSERTYPE(state, data){\r\n      state.users = data\r\n    },\r\n    SETPROPOSALS(state, data) {\r\n      state.proposals = data;\r\n    },\r\n    SETPROPOSALBYSTATE(state, data) {\r\n      state.proposals = data\r\n    },\r\n    SETPROPOSAL(state, data) {\r\n      state.proposal = data.titulo;\r\n    },\r\n    DELETEPROPOSAL(state, id) {\r\n      state.proposals = state.proposals.filter((proposal) => proposal.id != id);\r\n    },\r\n    CANDIDATURA(state, data) {\r\n      state.applications.push(data);\r\n    },\r\n    ALTERARPROP(state, data) {\r\n      console.log(data);\r\n      state.proposals = state.proposals.map((proposal) =>\r\n        proposal.id == data.id ? data : proposal\r\n      );\r\n    },\r\n    LOGIN(state, user) {\r\n      state.loggedUser = user;\r\n    },\r\n    LOGOUT(state) {\r\n      state.loggedUser = \"\";\r\n    },\r\n    REGISTER(state, user) {\r\n      state.users.push(user);\r\n    },\r\n    REGISTERPROPOSAL(state, proposal) {\r\n      state.proposals.push(proposal);\r\n    },\r\n    REGISTERNOTIFICATION(state, notif) {\r\n      state.notifications.push(notif);\r\n    },\r\n    SETMYCANDIDATURAS(state, proposals) {\r\n      console.log(\"Aqui é commit \" + proposals);\r\n      state.applications = proposals;\r\n      console.log(proposals);\r\n    },\r\n  },\r\n});\r\n"]}]}