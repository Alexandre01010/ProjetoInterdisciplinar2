{"remainingRequest":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","mtime":1623289052707},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/fabia/Desktop/esmad/pw2/projeto consumo/ProjetoInterdisciplinar2/ProjetoInterdisciplinar2/src/store/index.js"],"names":["Vue","Vuex","axios","AuthService","use","resource_uri","Store","state","ProposalUser","users","loggedUser","localStorage","getItem","JSON","parse","proposals","applications","proposal","foruns","temas","answers","notifications","getters","getForuns","search","filter","forum","titulo","includes","getPretendedUserName","getNextProposalId","length","id","getNextnotificationId","getFilterdAnswers","answer","texto_resposta","getFilterdtemas","tema","getMyCandidaturas","getProposalTitle","getUsers","getLoggedUser","username","isLoggedUser","getProposals","getFilterdProposals","type","stateF","type2","card_filter","nome_entidade","toUpperCase","prop","id_tipo_estado","getType","tipo","getNotification","actions","fetchAnswers","context","payload","get","id_tema","headers","accessToken","response","commit","data","fetchTemasByIdForum","id_forum","fetchMyForuns","fetchMyProposals","putUpdateCandidatura","put","id_proposta","putUpdateProposal","putAproveProposal","console","log","deleteMyCandidatura","delete","fetchUserById","fetchUserByType","fetchProposals","fetchProposalById","fetchPorposalForApproval","fetchMyCandidaturas","eliminar","setItem","stringify","login","logout","removeItem","register","user","find","email","undefined","registerProposal","post","registerNotification","aprovar","proposta","edited","estado","orientador","form","revisao","msgRevisao","candidatar","application","mensagem","candidatura","mutations","SETRESP","SETTEMAS","SETFORUNS","SETUSER","SETUSERTYPE","SETPROPOSALS","SETPROPOSALBYSTATE","SETPROPOSAL","DELETEPROPOSAL","CANDIDATURA","push","ALTERARPROP","map","LOGIN","LOGOUT","REGISTER","REGISTERPROPOSAL","REGISTERNOTIFICATION","notif","SETMYCANDIDATURAS"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n//import { UserService } from \"@/services/user.service\";\r\nimport { AuthService } from \"@/services/auth.service\";\r\n\r\nVue.use(Vuex);\r\nconst resource_uri = \"http://localhost:8080\";\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ProposalUser: \"\",\r\n    users: [],\r\n    loggedUser: localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : \"\",\r\n    proposals: [],\r\n    applications: [],\r\n    proposal: \"\",\r\n    foruns: [],\r\n    temas:[],\r\n    answers:[],\r\n    notifications: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : [],\r\n  },\r\n  getters: {\r\n    getForuns: (state) =>(search)=> {\r\n      if (search) {\r\n        return state.foruns.filter(forum=>forum.titulo.includes(search));\r\n      }\r\n      return state.foruns;\r\n    },\r\n    getPretendedUserName: (state) => {\r\n      return state.ProposalUser;\r\n    },\r\n    getNextProposalId: (state) => {\r\n      return state.proposals.length > 0\r\n        ? state.proposals[state.proposals.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getNextnotificationId: (state) => {\r\n      return state.notifications.length > 0\r\n        ? state.notifications[state.notifications.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getFilterdAnswers:(state)=>(search)=>{\r\n      if(search){\r\n        return state.answers.filter(answer=>answer.texto_resposta.includes(search))\r\n      }\r\n      return state.answers\r\n    },\r\n    getFilterdtemas:(state)=>(search)=>{\r\n      if (search) {\r\n        return state.temas.filter(tema=>tema.titulo.includes(search));\r\n      }\r\n      return state.temas;\r\n    },\r\n    getMyCandidaturas: (state) => {\r\n      return state.applications;\r\n    },\r\n    getProposalTitle: (state) => {\r\n      return state.proposal;\r\n    },\r\n    getUsers: (state) => state.users,\r\n    getLoggedUser: (state) => state.loggedUser.username,\r\n    isLoggedUser: (state) => (state.loggedUser == \"\" ? false : true),\r\n    getProposals: (state) => {\r\n      return state.proposals;\r\n    },\r\n    getFilterdProposals: (state) => (type, search, stateF) => {\r\n      let type2;\r\n      if (type != \"all\") {\r\n        type2 = type == \"estagio\" ? false : true;\r\n      }\r\n      let card_filter = state.proposals.filter(\r\n        (proposal) =>\r\n          ((proposal.nome_entidade == null) == type2 || type == \"all\") &&\r\n          (proposal.titulo.toUpperCase().includes(search.toUpperCase()) ||\r\n            search == \"\")\r\n      );\r\n      if (stateF == 1 || stateF == 2 || stateF == 3) {\r\n        card_filter = card_filter.filter(\r\n          (prop) => prop.id_tipo_estado == stateF\r\n        );\r\n      }\r\n      return card_filter;\r\n    },\r\n    getType: (state) => {\r\n      return state.proposals.tipo;\r\n    },\r\n    getNotification: (state) => {\r\n      return state.notifications;\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchAnswers(context,payload){\r\n      try{\r\n        \r\n        const response = await axios.get(resource_uri + \"/foruns/temas/\"+payload.id_tema+\"/respostas\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        \r\n        context.commit(\"SETRESP\", response.data);\r\n      }catch(error){\r\n        context.commit('SETRESP', [])\r\n      }\r\n    },\r\n    async fetchTemasByIdForum(context,payload){\r\n      try{\r\n        const response = await axios.get(resource_uri + \"/foruns/\"+payload.id_forum+\"/temas/\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        context.commit(\"SETTEMAS\", response.data);\r\n      }catch(error){\r\n        context.commit('SETTEMAS', [])\r\n      }\r\n    },\r\n    async fetchMyForuns(context){\r\n      const response = await axios.get(resource_uri + \"/foruns\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETFORUNS\", response.data);\r\n    },\r\n    async fetchMyProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async putUpdateCandidatura(context, payload) {\r\n        await axios.put(resource_uri + '/propostas/' +  payload.id_proposta + '/candidaturas' , payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async putUpdateProposal(context, payload) {\r\n      await axios.put(resource_uri + '/propostas/' + payload.id_proposta + '/data', payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async putAproveProposal(context, payload) {\r\n      console.log(payload)\r\n      await axios.put(resource_uri + '/propostas/' + payload.id_proposta + '/data', payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async deleteMyCandidatura(context, payload) {\r\n      await axios.delete(resource_uri + '/propostas/' + payload.id_proposta + '/candidaturas', {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async fetchUserById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/users/\" + id);\r\n      context.commit(\"SETUSER\", response.data);\r\n      //context.commit(\"SETUSER\", response.data);\r\n    },\r\n     async fetchUserByType(context, id) {\r\n       const response = await axios.get(resource_uri + \"/users?idTipoUser=\" + id, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n       })\r\n       context.commit(\"SETUSERTYPE\", response.data)\r\n     },\r\n    async fetchProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/approved\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async fetchProposalById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/propostas/\" + id);\r\n      context.commit(\"SETPROPOSAL\", response.data);\r\n    },\r\n    async fetchPorposalForApproval(context){\r\n      const response = await axios.get(resource_uri + \"/propostas/pending\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n      context.commit(\"SETPROPOSALBYSTATE\", response.data)\r\n    },\r\n    async fetchMyCandidaturas(context) {\r\n      const response = await axios.get(resource_uri + \"/candidaturas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      context.commit(\"SETMYCANDIDATURAS\", response.data);\r\n    },\r\n    async eliminar(context, id) {\r\n      context.commit(\"DELETEPROPOSAL\", id);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async login(context, payload) {\r\n      try {\r\n        const loggedUser = await AuthService.login(payload);\r\n        console.log(loggedUser);\r\n        context.commit(\"LOGIN\", loggedUser);\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n      // verificar se este user já existe\r\n      // const user = context.state.users.find(\r\n      //   (user) =>\r\n      //     user.email === payload.email && user.password === payload.password\r\n      // );\r\n      // if (user != undefined) {\r\n      //   // login com sucesso\r\n      //   context.commit(\"LOGIN\", user);\r\n      //   localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n      // } else {\r\n      //   throw \"O seu email ou password estão incorretos\";\r\n      // }\r\n    },\r\n    async logout(context) {\r\n      context.commit(\"LOGOUT\");\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async register(context, payload) {\r\n      // verificar se este user já existe\r\n      const user = context.state.users.find(\r\n        (user) => user.email === payload.email\r\n      );\r\n      if (user == undefined) {\r\n        let response = await AuthService.register(payload);\r\n\r\n        context.commit(\"REGISTER\", response);\r\n        //localStorage.setItem(\"users\", JSON.stringify(context.state.users));\r\n      } else {\r\n        return \"Email já existente\";\r\n      }\r\n    },\r\n    async registerProposal(context, payload) {\r\n      const proposal = context.state.proposals.find(\r\n        (proposal) => proposal.titulo == payload.titulo\r\n      );\r\n      if (proposal == undefined) {\r\n        console.log(payload);\r\n        let response = await axios.post(resource_uri + \"/propostas\", payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        //let proposal = payload\r\n        //proposal['id_proposta']=response.\r\n        // console.log(proposal);\r\n        context.commit(\"REGISTERPROPOSAL\", proposal);\r\n        //localStorage.setItem('proposals', JSON.stringify(context.state.proposals))\r\n      } else {\r\n        throw \"Proposta já criada! Por favor reveja os campos\";\r\n      }\r\n    },\r\n\r\n    async registerNotification(context, payload) {\r\n      context.commit(\"REGISTERNOTIFICATION\", payload);\r\n      localStorage.setItem(\r\n        \"notification\",\r\n        JSON.stringify(context.state.notifications)\r\n      );\r\n    },\r\n\r\n    async aprovar(context, data) {\r\n      console.log(data.proposta);\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"aprovado\";\r\n      edited.orientador = data.form.orientador;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async revisao(context, data) {\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"revisao\";\r\n      edited.msgRevisao = data.form.revisao;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async candidatar(context, data) {\r\n      let application = {\r\n        user: data.form.user,\r\n        id_proposta: data.proposta.id,\r\n        mensagem: data.form.candidatura,\r\n      };\r\n      //console.log(application)\r\n      context.commit(\"CANDIDATURA\", application);\r\n      localStorage.setItem(\r\n        \"applications\",\r\n        JSON.stringify(context.state.applications)\r\n      );\r\n    },\r\n  },\r\n  mutations: {\r\n    SETRESP(state,data){state.answers=data},\r\n    SETTEMAS(state,data){state.temas=data},\r\n    SETFORUNS(state,data){state.foruns=data},\r\n    SETUSER(state, data) {\r\n      state.ProposalUser = data;\r\n    },\r\n    SETUSERTYPE(state, data){\r\n      state.users = data\r\n    },\r\n    SETPROPOSALS(state, data) {\r\n      state.proposals = data;\r\n    },\r\n    SETPROPOSALBYSTATE(state, data) {\r\n      state.proposals = data\r\n    },\r\n    SETPROPOSAL(state, data) {\r\n      state.proposal = data.titulo;\r\n    },\r\n    DELETEPROPOSAL(state, id) {\r\n      state.proposals = state.proposals.filter((proposal) => proposal.id != id);\r\n    },\r\n    CANDIDATURA(state, data) {\r\n      state.applications.push(data);\r\n    },\r\n    ALTERARPROP(state, data) {\r\n      console.log(data);\r\n      state.proposals = state.proposals.map((proposal) =>\r\n        proposal.id == data.id ? data : proposal\r\n      );\r\n    },\r\n    LOGIN(state, user) {\r\n      state.loggedUser = user;\r\n    },\r\n    LOGOUT(state) {\r\n      state.loggedUser = \"\";\r\n    },\r\n    REGISTER(state, user) {\r\n      state.users.push(user);\r\n    },\r\n    REGISTERPROPOSAL(state, proposal) {\r\n      state.proposals.push(proposal);\r\n    },\r\n    REGISTERNOTIFICATION(state, notif) {\r\n      state.notifications.push(notif);\r\n    },\r\n    SETMYCANDIDATURAS(state, proposals) {\r\n      console.log(\"Aqui é commit \" + proposals);\r\n      state.applications = proposals;\r\n      console.log(proposals);\r\n    },\r\n  },\r\n});\r\n"]}]}