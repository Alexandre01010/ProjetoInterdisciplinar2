{"remainingRequest":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\store\\index.js","mtime":1623342981694},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/fabia/Desktop/esmad/pw2/projeto consumo/ProjetoInterdisciplinar2/ProjetoInterdisciplinar2/src/store/index.js"],"names":["Vue","Vuex","axios","AuthService","use","resource_uri","Store","state","ProposalUser","users","loggedUser","localStorage","getItem","JSON","parse","proposals","applications","proposal","foruns","temas","answers","entrevistas","notifications","getters","getInterviews","search","filter","inter","texto_agenda","includes","getForuns","forum","titulo","getPretendedUserName","getNextProposalId","length","id","getNextnotificationId","getFilterdAnswers","answer","texto_resposta","getFilterdtemas","tema","getMyCandidaturas","getProposalTitle","getUsers","getLoggedUser","username","isLoggedUser","getProposals","getFilterdProposals","type","stateF","type2","card_filter","nome_entidade","toUpperCase","prop","id_tipo_estado","getType","tipo","getNotification","actions","fetchEntrevistas","context","get","headers","accessToken","response","commit","data","createResposta","payload","post","id_tema","createTema","id_forum","createForum","location","reload","fetchAnswers","fetchTemasByIdForum","fetchMyForuns","fetchMyProposals","putUpdateCandidatura","put","id_proposta","putUpdateCandidaturaState","putUpdateProposal","putAproveProposal","console","log","deleteMyCandidatura","delete","fetchUserById","deleteProposals","fetchUserByType","fetchProposals","fetchProposalById","fetchPorposalForApproval","fetchMyCandidaturas","fetchCandidaturas","postCandidatura","getCandidaturasByProposal","eliminar","setItem","stringify","login","logout","removeItem","register","user","find","email","undefined","registerProposal","registerNotification","aprovar","proposta","edited","estado","orientador","form","revisao","msgRevisao","candidatar","application","mensagem","candidatura","mutations","SETENTREVISTAS","SETCANDIDATURASBYPROPOSAL","SETRESP","SETTEMAS","SETFORUNS","SETUSER","SETUSERTYPE","SETPROPOSALS","SETPROPOSALBYSTATE","SETPROPOSAL","DELETEPROPOSAL","CANDIDATURA","push","ALTERARPROP","map","LOGIN","LOGOUT","REGISTER","REGISTERPROPOSAL","REGISTERNOTIFICATION","notif","SETMYCANDIDATURAS"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n//import { UserService } from \"@/services/user.service\";\r\nimport { AuthService } from \"@/services/auth.service\";\r\n\r\nVue.use(Vuex);\r\nconst resource_uri = \"http://localhost:8080\";\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ProposalUser: \"\",\r\n    users: [],\r\n    loggedUser: localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : \"\",\r\n    proposals: [],\r\n    applications: [],\r\n    proposal: \"\",\r\n    foruns: [],\r\n    temas: [],\r\n    answers: [],\r\n    entrevistas:[],\r\n    notifications: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : [],\r\n  },\r\n  getters: {\r\n    getInterviews:(state)=>(search)=>{\r\n      if (search) {\r\n        return state.entrevistas.filter(inter=>inter.texto_agenda.includes(search))\r\n      }\r\n      return state.entrevistas\r\n    },\r\n    getForuns: (state) => (search) => {\r\n      if (search) {\r\n        return state.foruns.filter((forum) => forum.titulo.includes(search));\r\n      }\r\n      return state.foruns;\r\n    },\r\n    getPretendedUserName: (state) => {\r\n      return state.ProposalUser;\r\n    },\r\n    getNextProposalId: (state) => {\r\n      return state.proposals.length > 0\r\n        ? state.proposals[state.proposals.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getNextnotificationId: (state) => {\r\n      return state.notifications.length > 0\r\n        ? state.notifications[state.notifications.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getFilterdAnswers: (state) => (search) => {\r\n      if (search) {\r\n        return state.answers.filter((answer) =>\r\n          answer.texto_resposta.includes(search)\r\n        );\r\n      }\r\n      return state.answers;\r\n    },\r\n    getFilterdtemas: (state) => (search) => {\r\n      if (search) {\r\n        return state.temas.filter((tema) => tema.titulo.includes(search));\r\n      }\r\n      return state.temas;\r\n    },\r\n    getMyCandidaturas: (state) => {\r\n      return state.applications;\r\n    },\r\n    getProposalTitle: (state) => {\r\n      return state.proposal;\r\n    },\r\n    getUsers: (state) => state.users,\r\n    getLoggedUser: (state) => state.loggedUser.username,\r\n    isLoggedUser: (state) => (state.loggedUser == \"\" ? false : true),\r\n    getProposals: (state) => {\r\n      return state.proposals;\r\n    },\r\n    getFilterdProposals: (state) => (type, search, stateF) => {\r\n      let type2;\r\n      if (type != \"all\") {\r\n        type2 = type == \"estagio\" ? false : true;\r\n      }\r\n      let card_filter = state.proposals.filter(\r\n        (proposal) =>\r\n          ((proposal.nome_entidade == null) == type2 || type == \"all\") &&\r\n          (proposal.titulo.toUpperCase().includes(search.toUpperCase()) ||\r\n            search == \"\")\r\n      );\r\n      if (stateF == 1 || stateF == 2 || stateF == 3) {\r\n        card_filter = card_filter.filter(\r\n          (prop) => prop.id_tipo_estado == stateF\r\n        );\r\n      }\r\n      return card_filter;\r\n    },\r\n    getType: (state) => {\r\n      return state.proposals.tipo;\r\n    },\r\n    getNotification: (state) => {\r\n      return state.notifications;\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchEntrevistas(context){\r\n      let response=await axios.get(\r\n        resource_uri + \"/entrevistas\",{\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n      context.commit(\"SETENTREVISTAS\", response.data);\r\n    },\r\n    async createResposta(context, payload) {\r\n      await axios.post(\r\n        resource_uri + \"/foruns/temas/\" + payload.id_tema + \"/respostas\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n    },\r\n\r\n    async createTema(context, payload) {\r\n      await axios.post(\r\n        resource_uri + \"/foruns/\" + payload.id_forum + \"/temas\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    async createForum(context, payload) {\r\n      try {\r\n        const response = await axios.post(resource_uri + \"/foruns\", payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        location.reload();\r\n\r\n        context.commit(\"SETRESP\", response.data);\r\n      } catch (error) {\r\n        context.commit(\"SETRESP\", []);\r\n      }\r\n    },\r\n\r\n    async fetchAnswers(context, payload) {\r\n      try {\r\n        const response = await axios.get(\r\n          resource_uri + \"/foruns/temas/\" + payload.id_tema + \"/respostas\",\r\n          {\r\n            headers: {\r\n              \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n                .accessToken,\r\n            },\r\n          }\r\n        );\r\n\r\n        context.commit(\"SETRESP\", response.data);\r\n      } catch (error) {\r\n        context.commit(\"SETRESP\", []);\r\n      }\r\n    },\r\n    async fetchTemasByIdForum(context, payload) {\r\n      try {\r\n        const response = await axios.get(\r\n          resource_uri + \"/foruns/\" + payload.id_forum + \"/temas/\",\r\n          {\r\n            headers: {\r\n              \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n                .accessToken,\r\n            },\r\n          }\r\n        );\r\n        context.commit(\"SETTEMAS\", response.data);\r\n      } catch (error) {\r\n        context.commit(\"SETTEMAS\", []);\r\n      }\r\n    },\r\n    async fetchMyForuns(context) {\r\n      const response = await axios.get(resource_uri + \"/foruns\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETFORUNS\", response.data);\r\n    },\r\n    async fetchMyProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async putUpdateCandidatura(context, payload) {\r\n      await axios.put(\r\n        resource_uri + \"/propostas/\" + payload.id_proposta + \"/candidaturas\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    async putUpdateCandidaturaState(context, payload) {\r\n      await axios.put(resource_uri + '/propostas/' + payload.id_proposta + '/candidaturas/updateState', payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async putUpdateProposal(context, payload) {\r\n      await axios.put(\r\n        resource_uri + \"/propostas/\" + payload.id_proposta + \"/data\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    async putAproveProposal(context, payload) {\r\n      console.log(payload);\r\n      await axios.put(\r\n        resource_uri + \"/propostas/\" + payload.id_proposta + \"/data\",\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    async deleteMyCandidatura(context, payload) {\r\n      await axios.delete(\r\n        resource_uri + \"/propostas/\" + payload.id_proposta + \"/candidaturas\",\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    async fetchUserById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/users/\" + id);\r\n      context.commit(\"SETUSER\", response.data);\r\n      //context.commit(\"SETUSER\", response.data);\r\n    },\r\n\r\n    async deleteProposals(context, payload) {\r\n      await axios.delete(resource_uri + \"/propostas/\" + payload.id_proposta, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n    },\r\n\r\n    async fetchUserByType(context, id) {\r\n      const response = await axios.get(\r\n        resource_uri + \"/users?idTipoUser=\" + id,\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n      context.commit(\"SETUSERTYPE\", response.data);\r\n    },\r\n    async fetchProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/approved\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async fetchProposalById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/propostas/\" + id);\r\n      context.commit(\"SETPROPOSAL\", response.data);\r\n    },\r\n    async fetchPorposalForApproval(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/pending\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALBYSTATE\", response.data);\r\n    },\r\n    async fetchMyCandidaturas(context) {\r\n      const response = await axios.get(resource_uri + \"/candidaturas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      context.commit(\"SETMYCANDIDATURAS\", response.data);\r\n    },\r\n\r\n    async fetchCandidaturas(context) {\r\n      const response = await axios.get(resource_uri + \"/candidaturas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n      context.commit(\"SETMYCANDIDATURAS\", response.data);\r\n      return response\r\n    },\r\n\r\n    async postCandidatura(context, payload) {\r\n      await axios.post(\r\n        resource_uri + \"/candidaturas/\" + payload.id_proposta,\r\n        payload,\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n    },\r\n\r\n    async getCandidaturasByProposal(context, payload) {\r\n      const response = await axios.get(\r\n        resource_uri +\r\n          \"/propostas/\" +\r\n          payload.id_proposta +\r\n          \"/candidaturas/associadas\",\r\n        {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        }\r\n      );\r\n\r\n      context.commit(\"SETCANDIDATURASBYPROPOSAL\", response.data);\r\n    },\r\n\r\n    async eliminar(context, id) {\r\n      context.commit(\"DELETEPROPOSAL\", id);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async login(context, payload) {\r\n      try {\r\n        const loggedUser = await AuthService.login(payload);\r\n        console.log(loggedUser);\r\n        context.commit(\"LOGIN\", loggedUser);\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n      // verificar se este user já existe\r\n      // const user = context.state.users.find(\r\n      //   (user) =>\r\n      //     user.email === payload.email && user.password === payload.password\r\n      // );\r\n      // if (user != undefined) {\r\n      //   // login com sucesso\r\n      //   context.commit(\"LOGIN\", user);\r\n      //   localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n      // } else {\r\n      //   throw \"O seu email ou password estão incorretos\";\r\n      // }\r\n    },\r\n    async logout(context) {\r\n      context.commit(\"LOGOUT\");\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async register(context, payload) {\r\n      // verificar se este user já existe\r\n      const user = context.state.users.find(\r\n        (user) => user.email === payload.email\r\n      );\r\n      if (user == undefined) {\r\n        let response = await AuthService.register(payload);\r\n\r\n        context.commit(\"REGISTER\", response);\r\n        //localStorage.setItem(\"users\", JSON.stringify(context.state.users));\r\n      } else {\r\n        return \"Email já existente\";\r\n      }\r\n    },\r\n    async registerProposal(context, payload) {\r\n      const proposal = context.state.proposals.find(\r\n        (proposal) => proposal.titulo == payload.titulo\r\n      );\r\n      if (proposal == undefined) {\r\n        console.log(payload);\r\n        let response = await axios.post(resource_uri + \"/propostas\", payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        //let proposal = payload\r\n        //proposal['id_proposta']=response.\r\n        // console.log(proposal);\r\n        context.commit(\"REGISTERPROPOSAL\", proposal);\r\n        //localStorage.setItem('proposals', JSON.stringify(context.state.proposals))\r\n      } else {\r\n        throw \"Proposta já criada! Por favor reveja os campos\";\r\n      }\r\n    },\r\n\r\n    async registerNotification(context, payload) {\r\n      context.commit(\"REGISTERNOTIFICATION\", payload);\r\n      localStorage.setItem(\r\n        \"notification\",\r\n        JSON.stringify(context.state.notifications)\r\n      );\r\n    },\r\n\r\n    async aprovar(context, data) {\r\n      console.log(data.proposta);\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"aprovado\";\r\n      edited.orientador = data.form.orientador;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async revisao(context, data) {\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"revisao\";\r\n      edited.msgRevisao = data.form.revisao;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async candidatar(context, data) {\r\n      let application = {\r\n        user: data.form.user,\r\n        id_proposta: data.proposta.id,\r\n        mensagem: data.form.candidatura,\r\n      };\r\n      //console.log(application)\r\n      context.commit(\"CANDIDATURA\", application);\r\n      localStorage.setItem(\r\n        \"applications\",\r\n        JSON.stringify(context.state.applications)\r\n      );\r\n    },\r\n  },\r\n  mutations: {\r\n    SETENTREVISTAS(state,data){\r\n      state.entrevistas = data;\r\n    },\r\n    SETCANDIDATURASBYPROPOSAL(state, data) {\r\n      state.applications = data;\r\n    },\r\n    SETRESP(state, data) {\r\n      state.answers = data;\r\n    },\r\n    SETTEMAS(state, data) {\r\n      state.temas = data;\r\n    },\r\n    SETFORUNS(state, data) {\r\n      state.foruns = data;\r\n    },\r\n    SETUSER(state, data) {\r\n      state.ProposalUser = data;\r\n    },\r\n    SETUSERTYPE(state, data) {\r\n      state.users = data;\r\n    },\r\n    SETPROPOSALS(state, data) {\r\n      state.proposals = data;\r\n    },\r\n    SETPROPOSALBYSTATE(state, data) {\r\n      state.proposals = data;\r\n    },\r\n    SETPROPOSAL(state, data) {\r\n      state.proposal = data.titulo;\r\n    },\r\n    DELETEPROPOSAL(state, id) {\r\n      state.proposals = state.proposals.filter((proposal) => proposal.id != id);\r\n    },\r\n    CANDIDATURA(state, data) {\r\n      state.applications.push(data);\r\n    },\r\n    ALTERARPROP(state, data) {\r\n      console.log(data);\r\n      state.proposals = state.proposals.map((proposal) =>\r\n        proposal.id == data.id ? data : proposal\r\n      );\r\n    },\r\n    LOGIN(state, user) {\r\n      state.loggedUser = user;\r\n    },\r\n    LOGOUT(state) {\r\n      state.loggedUser = \"\";\r\n    },\r\n    REGISTER(state, user) {\r\n      state.users.push(user);\r\n    },\r\n    REGISTERPROPOSAL(state, proposal) {\r\n      state.proposals.push(proposal);\r\n    },\r\n    REGISTERNOTIFICATION(state, notif) {\r\n      state.notifications.push(notif);\r\n    },\r\n    SETMYCANDIDATURAS(state, proposals) {\r\n      console.log(\"Aqui é commit \" + proposals);\r\n      state.applications = proposals;\r\n      console.log(proposals);\r\n    },\r\n  },\r\n});\r\n"]}]}