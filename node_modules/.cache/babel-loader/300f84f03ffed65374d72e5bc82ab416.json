{"remainingRequest":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\services\\user.service.js","dependencies":[{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\src\\services\\user.service.js","mtime":1622756748346},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\fabia\\Desktop\\esmad\\pw2\\projeto consumo\\ProjetoInterdisciplinar2\\ProjetoInterdisciplinar2\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2ZhYmlhL0Rlc2t0b3AvZXNtYWQvcHcyL3Byb2pldG8gY29uc3Vtby9Qcm9qZXRvSW50ZXJkaXNjaXBsaW5hcjIvUHJvamV0b0ludGVyZGlzY2lwbGluYXIyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IEFQSV9VUkwgZnJvbSAnLi9jb25maWcuanMnOwoKZnVuY3Rpb24gYXV0aEhlYWRlcigpIHsKICAvLyBjaGVja3MgTG9jYWwgU3RvcmFnZSBmb3IgdXNlciBpdGVtCiAgdmFyIHVzZXIgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyJykpOyAvLyBpZiB0aGVyZSBpcyBhIGxvZ2dlZCBpbiB1c2VyIHdpdGggYWNjZXNzVG9rZW4gKEpXVCkKCiAgaWYgKHVzZXIgJiYgdXNlci5hY2Nlc3NUb2tlbikgewogICAgLy8gcmV0dXJuIEhUVFAgYXV0aG9yaXphdGlvbiBoZWFkZXIgZm9yIE5vZGUuanMgRXhwcmVzcyBiYWNrLWVuZAogICAgcmV0dXJuIHsKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ3gtYWNjZXNzLXRva2VuJzogdXNlci5hY2Nlc3NUb2tlbgogICAgfTsKICB9IGVsc2UgewogICAgcmV0dXJuIHsKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgfTsgLy9vdGhlcndpc2UsIHJldHVybiBhbiBlbXB0eSBvYmplY3QKICB9Cn0KCmV4cG9ydCB2YXIgVXNlclNlcnZpY2UgPSB7CiAgLy8gYXN5bmMgZmV0Y2hPbmVVc2VyQnlJRChpZCkgewogIC8vICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9L3VzZXJzLyR7aWR9YCwgewogIC8vICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAvLyAgICAgICAgIGhlYWRlcnM6IGF1dGhIZWFkZXIoKQogIC8vICAgICB9KTsKICAvLyAgICAgaWYgKHJlc3BvbnNlLm9rKSB7CiAgLy8gICAgICAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAvLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJVU0VSIFNFUlZJQ0UgLSBmZXRjaCAxIFVTRVIiKQogIC8vICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSkKICAvLyAgICAgICAgIHJldHVybiBkYXRhOwogIC8vICAgICB9CiAgLy8gICAgIGVsc2UKICAvLyAgICAgewogIC8vICAgICAgICAgLy8gY29uc29sZS5sb2coIlVTRVIgU0VSVklDRSAtIGZldGNoIDEgVVNFUiIpCiAgLy8gICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAvLyAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKICAvLyAgICAgfQogIC8vIH0sCiAgZmV0Y2hBbGxVc2VyczogZnVuY3Rpb24gZmV0Y2hBbGxVc2VycygpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXNwb25zZSwgZGF0YTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi91c2VycyIpLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgICAgICAgICAgaGVhZGVyczogYXV0aEhlYWRlcigpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZGF0YSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICAvLyBzZW5kcyByZXF1ZXN0IHRvIEFQSSByb290CiAgZ2V0UHVibGljQ29udGVudDogZnVuY3Rpb24gZ2V0UHVibGljQ29udGVudCgpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgcmVzcG9uc2UsIGRhdGE7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIgLy8gcmVxdWlyZXMgTk8gYXV0aG9yaXphdGlvbiBoZWFkZXIKCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBkYXRhKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgVXNlclNlcnZpY2U7CgpmdW5jdGlvbiBoYW5kbGVSZXNwb25zZXMoY29kZSkgewogIHZhciBtZXNzYWdlID0gIiI7CgogIHN3aXRjaCAoY29kZSkgewogICAgY2FzZSA0MDE6CiAgICAgIG1lc3NhZ2UgPSAiTm90IGFsbG93ZWQgdG8gZXhlY3V0ZWQgdGhpcyBhY3Rpb24hIjsKICAgICAgYnJlYWs7CgogICAgY2FzZSA0MDM6CiAgICAgIG1lc3NhZ2UgPSAiRm9yYmlkZGVuIGFjY2VzcyI7CiAgICAgIGJyZWFrOwoKICAgIGRlZmF1bHQ6CiAgICAgIG1lc3NhZ2UgPSAiVW5rb3duIG1lc3NhZ2UiOwogICAgICBicmVhazsKICB9CgogIHJldHVybiBtZXNzYWdlOwp9"},{"version":3,"sources":["C:/Users/fabia/Desktop/esmad/pw2/projeto consumo/ProjetoInterdisciplinar2/ProjetoInterdisciplinar2/src/services/user.service.js"],"names":["API_URL","authHeader","user","JSON","parse","localStorage","getItem","accessToken","UserService","fetchAllUsers","fetch","method","headers","response","ok","json","data","Error","handleResponses","status","getPublicContent","code","message"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,aAApB;;AAEA,SAASC,UAAT,GAAsB;AAClB;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX,CAFkB,CAIlB;;AACA,MAAIJ,IAAI,IAAIA,IAAI,CAACK,WAAjB,EAA8B;AAC1B;AACA,WAAO;AACH,sBAAgB,kBADb;AAEH,wBAAkBL,IAAI,CAACK;AAFpB,KAAP;AAIH,GAND,MAMO;AACH,WAAO;AAAE,sBAAgB;AAAlB,KAAP,CADG,CAC4C;AAClD;AACJ;;AACD,OAAO,IAAMC,WAAW,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEMC,EAAAA,aApBiB,2BAoBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGKC,KAAK,WAAIV,OAAJ,aAAqB;AAC7CW,gBAAAA,MAAM,EAAE,KADqC;AAE7CC,gBAAAA,OAAO,EAAEX,UAAU;AAF0B,eAArB,CAHV;;AAAA;AAGZY,cAAAA,QAHY;;AAAA,mBAOdA,QAAQ,CAACC,EAPK;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQGD,QAAQ,CAACE,IAAT,EARH;;AAAA;AAQVC,cAAAA,IARU;AAAA,+CAWPA,IAXO;;AAAA;AAAA,oBAiBRC,KAAK,CAACC,eAAe,CAACL,QAAQ,CAACM,MAAV,CAAhB,CAjBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBrB,GAxCsB;AA0CvB;AACMC,EAAAA,gBA3CiB,8BA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEEV,KAAK,WAAIV,OAAJ,GAAe;AACvCW,gBAAAA,MAAM,EAAE,KAD+B,CACzB;;AADyB,eAAf,CAFP;;AAAA;AAEfE,cAAAA,QAFe;;AAAA,mBAKjBA,QAAQ,CAACC,EALQ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAMAD,QAAQ,CAACE,IAAT,EANA;;AAAA;AAMbC,cAAAA,IANa;AAAA,gDASVA,IATU;;AAAA;AAAA,oBAYXC,KAAK,CAACC,eAAe,CAACL,QAAQ,CAACM,MAAV,CAAhB,CAZM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaxB;AAxDsB,CAApB;AA2DP,eAAeX,WAAf;;AAGA,SAASU,eAAT,CAAyBG,IAAzB,EAA+B;AAC3B,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQD,IAAR;AACI,SAAK,GAAL;AACIC,MAAAA,OAAO,GAAG,sCAAV;AACA;;AACJ,SAAK,GAAL;AACIA,MAAAA,OAAO,GAAG,kBAAV;AACA;;AACJ;AACIA,MAAAA,OAAO,GAAG,gBAAV;AACA;AATR;;AAWA,SAAOA,OAAP;AACH","sourcesContent":["import API_URL from './config.js'\r\n\r\nfunction authHeader() {\r\n    // checks Local Storage for user item\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    // if there is a logged in user with accessToken (JWT)\r\n    if (user && user.accessToken) {\r\n        // return HTTP authorization header for Node.js Express back-end\r\n        return {\r\n            'Content-Type': 'application/json',\r\n            'x-access-token': user.accessToken\r\n        };\r\n    } else {\r\n        return { 'Content-Type': 'application/json' }; //otherwise, return an empty object\r\n    }\r\n}\r\nexport const UserService = {\r\n    // async fetchOneUserByID(id) {\r\n    //     const response = await fetch(`${API_URL}/users/${id}`, {\r\n    //         method: \"GET\",\r\n    //         headers: authHeader()\r\n    //     });\r\n    //     if (response.ok) {\r\n    //         let data = await response.json();\r\n    //         // console.log(\"USER SERVICE - fetch 1 USER\")\r\n    //         // console.log(data)\r\n    //         return data;\r\n    //     }\r\n    //     else\r\n    //     {\r\n    //         // console.log(\"USER SERVICE - fetch 1 USER\")\r\n    //         // console.log(response)\r\n    //         throw Error(handleResponses(response.status));\r\n    //     }\r\n    // },\r\n\r\n    async fetchAllUsers() {\r\n        // console.log(\" USER SERVICE - fetch ALL USERS started...\")\r\n        // return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n        const response = await fetch(`${API_URL}/users`, {\r\n            method: \"GET\",\r\n            headers: authHeader()\r\n        });\r\n        if (response.ok) {\r\n            let data = await response.json();\r\n            // console.log(\"USER SERVICE - fetch ALL USERS\")\r\n            // console.log(data)\r\n            return data;\r\n        }\r\n        else\r\n        {\r\n            // console.log(\"USER SERVICE - fetch ALL USERS: ERROR \");\r\n            // console.log(response)\r\n            throw Error(handleResponses(response.status));\r\n        }\r\n            \r\n    },\r\n\r\n    // sends request to API root\r\n    async getPublicContent() {\r\n        // return axios.get(API_URL);\r\n        const response = await fetch(`${API_URL}`, {\r\n            method: \"GET\" // requires NO authorization header\r\n        });\r\n        if (response.ok) {\r\n            let data = await response.json();\r\n            // console.log(\"USER SERVICE - fetch WELCOMING MESSAGE\")\r\n            // console.log(data) // data = \"Welcome to the TUTORIALS api\"\r\n            return data;\r\n        }\r\n        else\r\n            throw Error(handleResponses(response.status));\r\n    }\r\n}\r\n\r\nexport default UserService;\r\n\r\n\r\nfunction handleResponses(code) {\r\n    let message = \"\";\r\n    switch (code) {\r\n        case 401:\r\n            message = \"Not allowed to executed this action!\";\r\n            break;\r\n        case 403:\r\n            message = \"Forbidden access\";\r\n            break;\r\n        default:\r\n            message = \"Unkown message\";\r\n            break;\r\n    }\r\n    return message;\r\n}"]}]}