{"remainingRequest":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\src\\store\\index.js","mtime":1623253807419},{"path":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623013249770},{"path":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1623013246762},{"path":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\eslint-loader\\index.js","mtime":1623013257037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexandre/Desktop/WebpII_2semestre/Tsiw_App/ProjetoInterdisciplinar2-1/src/store/index.js"],"names":["Vue","Vuex","axios","AuthService","use","resource_uri","Store","state","ProposalUser","users","loggedUser","localStorage","getItem","JSON","parse","proposals","applications","proposal","foruns","temas","notifications","getters","getForuns","search","filter","forum","titulo","includes","getPretendedUserName","getNextProposalId","length","id","getNextnotificationId","getFilterdtemas","tema","getMyCandidaturas","getProposalTitle","getUsers","getLoggedUser","username","isLoggedUser","getProposals","getFilterdProposals","type","stateF","type2","card_filter","nome_entidade","toUpperCase","prop","id_tipo_estado","getType","tipo","getNotification","actions","fetchTemasByIdForum","context","payload","get","id_forum","headers","accessToken","response","commit","data","fetchMyForuns","fetchMyProposals","putUpdateCandidatura","put","id_proposta","deleteMyCandidatura","delete","fetchUserById","fetchUserByType","fetchProposals","fetchProposalById","fetchPorposalForApproval","fetchMyCandidaturas","console","log","eliminar","setItem","stringify","login","logout","removeItem","register","user","find","email","undefined","registerProposal","post","registerNotification","aprovar","proposta","edited","estado","orientador","form","revisao","msgRevisao","candidatar","application","mensagem","candidatura","mutations","SETTEMAS","SETFORUNS","SETUSER","nome","SETPROPOSALS","SETPROPOSALBYSTATE","SETPROPOSAL","DELETEPROPOSAL","CANDIDATURA","push","ALTERARPROP","map","LOGIN","LOGOUT","REGISTER","REGISTERPROPOSAL","REGISTERNOTIFICATION","notif","SETMYCANDIDATURAS"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n//import { UserService } from \"@/services/user.service\";\r\nimport { AuthService } from \"@/services/auth.service\";\r\n\r\nVue.use(Vuex);\r\nconst resource_uri = \"http://localhost:8080\";\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ProposalUser: \"\",\r\n    users: [],\r\n    loggedUser: localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : \"\",\r\n    proposals: [],\r\n    applications: [],\r\n    proposal: \"\",\r\n    foruns: [],\r\n    temas:[],\r\n\r\n    notifications: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : [],\r\n  },\r\n  getters: {\r\n    getForuns: (state) =>(search)=> {\r\n      if (search) {\r\n        return state.foruns.filter(forum=>forum.titulo.includes(search));\r\n      }\r\n      return state.foruns;\r\n    },\r\n    getPretendedUserName: (state) => {\r\n      return state.ProposalUser;\r\n    },\r\n    getNextProposalId: (state) => {\r\n      return state.proposals.length > 0\r\n        ? state.proposals[state.proposals.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getNextnotificationId: (state) => {\r\n      return state.notifications.length > 0\r\n        ? state.notifications[state.notifications.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getFilterdtemas:(state)=>(search)=>{\r\n      if (search) {\r\n        return state.temas.filter(tema=>tema.titulo.includes(search));\r\n      }\r\n      return state.temas;\r\n    },\r\n    getMyCandidaturas: (state) => {\r\n      return state.applications;\r\n    },\r\n    getProposalTitle: (state) => {\r\n      return state.proposal;\r\n    },\r\n    getUsers: (state) => state.users,\r\n    getLoggedUser: (state) => state.loggedUser.username,\r\n    isLoggedUser: (state) => (state.loggedUser == \"\" ? false : true),\r\n    getProposals: (state) => {\r\n      return state.proposals;\r\n    },\r\n    getFilterdProposals: (state) => (type, search, stateF) => {\r\n      let type2;\r\n      if (type != \"all\") {\r\n        type2 = type == \"estagio\" ? false : true;\r\n      }\r\n      let card_filter = state.proposals.filter(\r\n        (proposal) =>\r\n          ((proposal.nome_entidade == null) == type2 || type == \"all\") &&\r\n          (proposal.titulo.toUpperCase().includes(search.toUpperCase()) ||\r\n            search == \"\")\r\n      );\r\n      if (stateF == 1 || stateF == 2 || stateF == 3) {\r\n        card_filter = card_filter.filter(\r\n          (prop) => prop.id_tipo_estado == stateF\r\n        );\r\n      }\r\n      return card_filter;\r\n    },\r\n    getType: (state) => {\r\n      return state.proposals.tipo;\r\n    },\r\n    getNotification: (state) => {\r\n      return state.notifications;\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchTemasByIdForum(context,payload){\r\n      try{\r\n        const response = await axios.get(resource_uri + \"/foruns/\"+payload.id_forum+\"/temas/\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        context.commit(\"SETTEMAS\", response.data);\r\n      }catch(error){\r\n        context.commit('SETTEMAS', [])\r\n      }\r\n    },\r\n    async fetchMyForuns(context){\r\n      const response = await axios.get(resource_uri + \"/foruns\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETFORUNS\", response.data);\r\n    },\r\n    async fetchMyProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async putUpdateCandidatura(context, payload) {\r\n        await axios.put(resource_uri + '/propostas/' +  payload.id_proposta + '/candidaturas' , payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async deleteMyCandidatura(context, payload) {\r\n      await axios.delete(resource_uri + '/propostas/' + payload.id_proposta + '/candidaturas', {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async fetchUserById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/users/\" + id);\r\n      context.commit(\"SETUSER\", response.data);\r\n      //context.commit(\"SETUSER\", response.data);\r\n    },\r\n    async fetchUserByType(context, id) {\r\n      const response = await axios\r\n    },\r\n    async fetchProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/approved\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async fetchProposalById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/propostas/\" + id);\r\n      context.commit(\"SETPROPOSAL\", response.data);\r\n    },\r\n    async fetchPorposalForApproval(context){\r\n      const response = await axios.get(resource_uri + \"/propostas/pending\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n      context.commit(\"SETPROPOSALBYSTATE\", response.data)\r\n    },\r\n    async fetchMyCandidaturas(context) {\r\n      const response = await axios.get(resource_uri + \"/candidaturas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      context.commit(\"SETMYCANDIDATURAS\", response.data);\r\n    },\r\n    async eliminar(context, id) {\r\n      context.commit(\"DELETEPROPOSAL\", id);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async login(context, payload) {\r\n      try {\r\n        const loggedUser = await AuthService.login(payload);\r\n        console.log(loggedUser);\r\n        context.commit(\"LOGIN\", loggedUser);\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n      // verificar se este user já existe\r\n      // const user = context.state.users.find(\r\n      //   (user) =>\r\n      //     user.email === payload.email && user.password === payload.password\r\n      // );\r\n      // if (user != undefined) {\r\n      //   // login com sucesso\r\n      //   context.commit(\"LOGIN\", user);\r\n      //   localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n      // } else {\r\n      //   throw \"O seu email ou password estão incorretos\";\r\n      // }\r\n    },\r\n    async logout(context) {\r\n      context.commit(\"LOGOUT\");\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async register(context, payload) {\r\n      // verificar se este user já existe\r\n      const user = context.state.users.find(\r\n        (user) => user.email === payload.email\r\n      );\r\n      if (user == undefined) {\r\n        let response = await AuthService.register(payload);\r\n\r\n        context.commit(\"REGISTER\", response);\r\n        //localStorage.setItem(\"users\", JSON.stringify(context.state.users));\r\n      } else {\r\n        return \"Email já existente\";\r\n      }\r\n    },\r\n    async registerProposal(context, payload) {\r\n      const proposal = context.state.proposals.find(\r\n        (proposal) => proposal.titulo == payload.titulo\r\n      );\r\n      if (proposal == undefined) {\r\n        console.log(payload);\r\n        let response = await axios.post(resource_uri + \"/propostas\", payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        //let proposal = payload\r\n        //proposal['id_proposta']=response.\r\n        // console.log(proposal);\r\n        context.commit(\"REGISTERPROPOSAL\", proposal);\r\n        //localStorage.setItem('proposals', JSON.stringify(context.state.proposals))\r\n      } else {\r\n        throw \"Proposta já criada! Por favor reveja os campos\";\r\n      }\r\n    },\r\n\r\n    async registerNotification(context, payload) {\r\n      context.commit(\"REGISTERNOTIFICATION\", payload);\r\n      localStorage.setItem(\r\n        \"notification\",\r\n        JSON.stringify(context.state.notifications)\r\n      );\r\n    },\r\n\r\n    async aprovar(context, data) {\r\n      console.log(data.proposta);\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"aprovado\";\r\n      edited.orientador = data.form.orientador;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async revisao(context, data) {\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"revisao\";\r\n      edited.msgRevisao = data.form.revisao;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async candidatar(context, data) {\r\n      let application = {\r\n        user: data.form.user,\r\n        id_proposta: data.proposta.id,\r\n        mensagem: data.form.candidatura,\r\n      };\r\n      //console.log(application)\r\n      context.commit(\"CANDIDATURA\", application);\r\n      localStorage.setItem(\r\n        \"applications\",\r\n        JSON.stringify(context.state.applications)\r\n      );\r\n    },\r\n  },\r\n  mutations: {\r\n    SETTEMAS(state,data){state.temas=data},\r\n    SETFORUNS(state,data){state.foruns=data},\r\n    SETUSER(state, data) {\r\n      state.ProposalUser = data.nome;\r\n    },\r\n    SETPROPOSALS(state, data) {\r\n      state.proposals = data;\r\n    },\r\n    SETPROPOSALBYSTATE(state, data) {\r\n      state.proposals = data\r\n    },\r\n    SETPROPOSAL(state, data) {\r\n      state.proposal = data.titulo;\r\n    },\r\n    DELETEPROPOSAL(state, id) {\r\n      state.proposals = state.proposals.filter((proposal) => proposal.id != id);\r\n    },\r\n    CANDIDATURA(state, data) {\r\n      state.applications.push(data);\r\n    },\r\n    ALTERARPROP(state, data) {\r\n      console.log(data);\r\n      state.proposals = state.proposals.map((proposal) =>\r\n        proposal.id == data.id ? data : proposal\r\n      );\r\n    },\r\n    LOGIN(state, user) {\r\n      state.loggedUser = user;\r\n    },\r\n    LOGOUT(state) {\r\n      state.loggedUser = \"\";\r\n    },\r\n    REGISTER(state, user) {\r\n      state.users.push(user);\r\n    },\r\n    REGISTERPROPOSAL(state, proposal) {\r\n      state.proposals.push(proposal);\r\n    },\r\n    REGISTERNOTIFICATION(state, notif) {\r\n      state.notifications.push(notif);\r\n    },\r\n    SETMYCANDIDATURAS(state, proposals) {\r\n      console.log(\"Aqui é commit \" + proposals);\r\n      state.applications = proposals;\r\n      console.log(proposals);\r\n    },\r\n  },\r\n});\r\n"]}]}