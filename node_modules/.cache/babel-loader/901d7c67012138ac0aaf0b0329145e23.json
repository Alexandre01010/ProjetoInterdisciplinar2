{"remainingRequest":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\src\\store\\index.js","mtime":1623293679829},{"path":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623013249770},{"path":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\babel-loader\\lib\\index.js","mtime":1623013246762},{"path":"C:\\Users\\Alexandre\\Desktop\\WebpII_2semestre\\Tsiw_App\\ProjetoInterdisciplinar2-1\\node_modules\\eslint-loader\\index.js","mtime":1623013257037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvQWxleGFuZHJlL0Rlc2t0b3AvV2VicElJXzJzZW1lc3RyZS9Uc2l3X0FwcC9Qcm9qZXRvSW50ZXJkaXNjaXBsaW5hcjItMS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFZ1ZXggZnJvbSAidnVleCI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7IC8vaW1wb3J0IHsgVXNlclNlcnZpY2UgfSBmcm9tICJAL3NlcnZpY2VzL3VzZXIuc2VydmljZSI7CgppbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gIkAvc2VydmljZXMvYXV0aC5zZXJ2aWNlIjsKVnVlLnVzZShWdWV4KTsKdmFyIHJlc291cmNlX3VyaSA9ICJodHRwOi8vbG9jYWxob3N0OjgwODAiOwpleHBvcnQgZGVmYXVsdCBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIFByb3Bvc2FsVXNlcjogIiIsCiAgICB1c2VyczogW10sCiAgICBsb2dnZWRVc2VyOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpID8gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpKSA6ICIiLAogICAgcHJvcG9zYWxzOiBbXSwKICAgIGFwcGxpY2F0aW9uczogW10sCiAgICBwcm9wb3NhbDogIiIsCiAgICBmb3J1bnM6IFtdLAogICAgdGVtYXM6IFtdLAogICAgYW5zd2VyczogW10sCiAgICBub3RpZmljYXRpb25zOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgibm90aWZpY2F0aW9uIikgPyBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJub3RpZmljYXRpb24iKSkgOiBbXQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0Rm9ydW5zOiBmdW5jdGlvbiBnZXRGb3J1bnMoc3RhdGUpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChzZWFyY2gpIHsKICAgICAgICBpZiAoc2VhcmNoKSB7CiAgICAgICAgICByZXR1cm4gc3RhdGUuZm9ydW5zLmZpbHRlcihmdW5jdGlvbiAoZm9ydW0pIHsKICAgICAgICAgICAgcmV0dXJuIGZvcnVtLnRpdHVsby5pbmNsdWRlcyhzZWFyY2gpOwogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gc3RhdGUuZm9ydW5zOwogICAgICB9OwogICAgfSwKICAgIGdldFByZXRlbmRlZFVzZXJOYW1lOiBmdW5jdGlvbiBnZXRQcmV0ZW5kZWRVc2VyTmFtZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuUHJvcG9zYWxVc2VyOwogICAgfSwKICAgIGdldE5leHRQcm9wb3NhbElkOiBmdW5jdGlvbiBnZXROZXh0UHJvcG9zYWxJZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucHJvcG9zYWxzLmxlbmd0aCA+IDAgPyBzdGF0ZS5wcm9wb3NhbHNbc3RhdGUucHJvcG9zYWxzLmxlbmd0aCAtIDFdLmlkICsgMSA6IDE7CiAgICB9LAogICAgZ2V0TmV4dG5vdGlmaWNhdGlvbklkOiBmdW5jdGlvbiBnZXROZXh0bm90aWZpY2F0aW9uSWQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLm5vdGlmaWNhdGlvbnMubGVuZ3RoID4gMCA/IHN0YXRlLm5vdGlmaWNhdGlvbnNbc3RhdGUubm90aWZpY2F0aW9ucy5sZW5ndGggLSAxXS5pZCArIDEgOiAxOwogICAgfSwKICAgIGdldEZpbHRlcmRBbnN3ZXJzOiBmdW5jdGlvbiBnZXRGaWx0ZXJkQW5zd2VycyhzdGF0ZSkgewogICAgICByZXR1cm4gZnVuY3Rpb24gKHNlYXJjaCkgewogICAgICAgIGlmIChzZWFyY2gpIHsKICAgICAgICAgIHJldHVybiBzdGF0ZS5hbnN3ZXJzLmZpbHRlcihmdW5jdGlvbiAoYW5zd2VyKSB7CiAgICAgICAgICAgIHJldHVybiBhbnN3ZXIudGV4dG9fcmVzcG9zdGEuaW5jbHVkZXMoc2VhcmNoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHN0YXRlLmFuc3dlcnM7CiAgICAgIH07CiAgICB9LAogICAgZ2V0RmlsdGVyZHRlbWFzOiBmdW5jdGlvbiBnZXRGaWx0ZXJkdGVtYXMoc3RhdGUpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChzZWFyY2gpIHsKICAgICAgICBpZiAoc2VhcmNoKSB7CiAgICAgICAgICByZXR1cm4gc3RhdGUudGVtYXMuZmlsdGVyKGZ1bmN0aW9uICh0ZW1hKSB7CiAgICAgICAgICAgIHJldHVybiB0ZW1hLnRpdHVsby5pbmNsdWRlcyhzZWFyY2gpOwogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gc3RhdGUudGVtYXM7CiAgICAgIH07CiAgICB9LAogICAgZ2V0TXlDYW5kaWRhdHVyYXM6IGZ1bmN0aW9uIGdldE15Q2FuZGlkYXR1cmFzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5hcHBsaWNhdGlvbnM7CiAgICB9LAogICAgZ2V0UHJvcG9zYWxUaXRsZTogZnVuY3Rpb24gZ2V0UHJvcG9zYWxUaXRsZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucHJvcG9zYWw7CiAgICB9LAogICAgZ2V0VXNlcnM6IGZ1bmN0aW9uIGdldFVzZXJzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyczsKICAgIH0sCiAgICBnZXRMb2dnZWRVc2VyOiBmdW5jdGlvbiBnZXRMb2dnZWRVc2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5sb2dnZWRVc2VyLnVzZXJuYW1lOwogICAgfSwKICAgIGlzTG9nZ2VkVXNlcjogZnVuY3Rpb24gaXNMb2dnZWRVc2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5sb2dnZWRVc2VyID09ICIiID8gZmFsc2UgOiB0cnVlOwogICAgfSwKICAgIGdldFByb3Bvc2FsczogZnVuY3Rpb24gZ2V0UHJvcG9zYWxzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wcm9wb3NhbHM7CiAgICB9LAogICAgZ2V0RmlsdGVyZFByb3Bvc2FsczogZnVuY3Rpb24gZ2V0RmlsdGVyZFByb3Bvc2FscyhzdGF0ZSkgewogICAgICByZXR1cm4gZnVuY3Rpb24gKHR5cGUsIHNlYXJjaCwgc3RhdGVGKSB7CiAgICAgICAgdmFyIHR5cGUyOwoKICAgICAgICBpZiAodHlwZSAhPSAiYWxsIikgewogICAgICAgICAgdHlwZTIgPSB0eXBlID09ICJlc3RhZ2lvIiA/IGZhbHNlIDogdHJ1ZTsKICAgICAgICB9CgogICAgICAgIHZhciBjYXJkX2ZpbHRlciA9IHN0YXRlLnByb3Bvc2Fscy5maWx0ZXIoZnVuY3Rpb24gKHByb3Bvc2FsKSB7CiAgICAgICAgICByZXR1cm4gKHByb3Bvc2FsLm5vbWVfZW50aWRhZGUgPT0gbnVsbCA9PSB0eXBlMiB8fCB0eXBlID09ICJhbGwiKSAmJiAocHJvcG9zYWwudGl0dWxvLnRvVXBwZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvVXBwZXJDYXNlKCkpIHx8IHNlYXJjaCA9PSAiIik7CiAgICAgICAgfSk7CgogICAgICAgIGlmIChzdGF0ZUYgPT0gMSB8fCBzdGF0ZUYgPT0gMiB8fCBzdGF0ZUYgPT0gMykgewogICAgICAgICAgY2FyZF9maWx0ZXIgPSBjYXJkX2ZpbHRlci5maWx0ZXIoZnVuY3Rpb24gKHByb3ApIHsKICAgICAgICAgICAgcmV0dXJuIHByb3AuaWRfdGlwb19lc3RhZG8gPT0gc3RhdGVGOwogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gY2FyZF9maWx0ZXI7CiAgICAgIH07CiAgICB9LAogICAgZ2V0VHlwZTogZnVuY3Rpb24gZ2V0VHlwZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucHJvcG9zYWxzLnRpcG87CiAgICB9LAogICAgZ2V0Tm90aWZpY2F0aW9uOiBmdW5jdGlvbiBnZXROb3RpZmljYXRpb24oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLm5vdGlmaWNhdGlvbnM7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBjcmVhdGVGb3J1bTogZnVuY3Rpb24gY3JlYXRlRm9ydW0oY29udGV4dCwgcGF5bG9hZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QocmVzb3VyY2VfdXJpICsgIi9mb3J1bnMiLCBwYXlsb2FkLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAieC1hY2Nlc3MtdG9rZW4iOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIikpLmFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJTRVRSRVNQIiwgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ1NFVFJFU1AnLCBbXSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGZldGNoQW5zd2VyczogZnVuY3Rpb24gZmV0Y2hBbnN3ZXJzKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHJlc291cmNlX3VyaSArICIvZm9ydW5zL3RlbWFzLyIgKyBwYXlsb2FkLmlkX3RlbWEgKyAiL3Jlc3Bvc3RhcyIsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJ4LWFjY2Vzcy10b2tlbiI6IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSkuYWNjZXNzVG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgiU0VUUkVTUCIsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnU0VUUkVTUCcsIFtdKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBmZXRjaFRlbWFzQnlJZEZvcnVtOiBmdW5jdGlvbiBmZXRjaFRlbWFzQnlJZEZvcnVtKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHJlc291cmNlX3VyaSArICIvZm9ydW5zLyIgKyBwYXlsb2FkLmlkX2ZvcnVtICsgIi90ZW1hcy8iLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAieC1hY2Nlc3MtdG9rZW4iOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIikpLmFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIlNFVFRFTUFTIiwgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdTRVRURU1BUycsIFtdKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA3XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBmZXRjaE15Rm9ydW5zOiBmdW5jdGlvbiBmZXRjaE15Rm9ydW5zKGNvbnRleHQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHJlc291cmNlX3VyaSArICIvZm9ydW5zIiwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgIngtYWNjZXNzLXRva2VuIjogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpKS5hY2Nlc3NUb2tlbgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJTRVRGT1JVTlMiLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZmV0Y2hNeVByb3Bvc2FsczogZnVuY3Rpb24gZmV0Y2hNeVByb3Bvc2Fscyhjb250ZXh0KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChyZXNvdXJjZV91cmkgKyAiL3Byb3Bvc3Rhcy9taW5oYXMiLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAieC1hY2Nlc3MtdG9rZW4iOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIikpLmFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIlNFVFBST1BPU0FMUyIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBwdXRVcGRhdGVDYW5kaWRhdHVyYTogZnVuY3Rpb24gcHV0VXBkYXRlQ2FuZGlkYXR1cmEoY29udGV4dCwgcGF5bG9hZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnB1dChyZXNvdXJjZV91cmkgKyAnL3Byb3Bvc3Rhcy8nICsgcGF5bG9hZC5pZF9wcm9wb3N0YSArICcvY2FuZGlkYXR1cmFzJywgcGF5bG9hZCwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgIngtYWNjZXNzLXRva2VuIjogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpKS5hY2Nlc3NUb2tlbgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU2KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcHV0VXBkYXRlUHJvcG9zYWw6IGZ1bmN0aW9uIHB1dFVwZGF0ZVByb3Bvc2FsKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU3JChfY29udGV4dDcpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ3LnByZXYgPSBfY29udGV4dDcubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQocmVzb3VyY2VfdXJpICsgJy9wcm9wb3N0YXMvJyArIHBheWxvYWQuaWRfcHJvcG9zdGEgKyAnL2RhdGEnLCBwYXlsb2FkLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAieC1hY2Nlc3MtdG9rZW4iOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIikpLmFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTcpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBwdXRBcHJvdmVQcm9wb3NhbDogZnVuY3Rpb24gcHV0QXByb3ZlUHJvcG9zYWwoY29udGV4dCwgcGF5bG9hZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOCgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTgkKF9jb250ZXh0OCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDgucHJldiA9IF9jb250ZXh0OC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocGF5bG9hZCk7CiAgICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucHV0KHJlc291cmNlX3VyaSArICcvcHJvcG9zdGFzLycgKyBwYXlsb2FkLmlkX3Byb3Bvc3RhICsgJy9kYXRhJywgcGF5bG9hZCwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgIngtYWNjZXNzLXRva2VuIjogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpKS5hY2Nlc3NUb2tlbgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU4KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZGVsZXRlTXlDYW5kaWRhdHVyYTogZnVuY3Rpb24gZGVsZXRlTXlDYW5kaWRhdHVyYShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU5KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOSQoX2NvbnRleHQ5KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OS5wcmV2ID0gX2NvbnRleHQ5Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZGVsZXRlKHJlc291cmNlX3VyaSArICcvcHJvcG9zdGFzLycgKyBwYXlsb2FkLmlkX3Byb3Bvc3RhICsgJy9jYW5kaWRhdHVyYXMnLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAieC1hY2Nlc3MtdG9rZW4iOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIikpLmFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDkuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTkpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBmZXRjaFVzZXJCeUlkOiBmdW5jdGlvbiBmZXRjaFVzZXJCeUlkKGNvbnRleHQsIGlkKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMCgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMCQoX2NvbnRleHQxMCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDEwLnByZXYgPSBfY29udGV4dDEwLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDEwLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChyZXNvdXJjZV91cmkgKyAiL3VzZXJzLyIgKyBpZCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQxMC5zZW50OwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIlNFVFVTRVIiLCByZXNwb25zZS5kYXRhKTsgLy9jb250ZXh0LmNvbW1pdCgiU0VUVVNFUiIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEwLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUxMCk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGRlbGV0ZVByb3Bvc2FsczogZnVuY3Rpb24gZGVsZXRlUHJvcG9zYWxzKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTExKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTEkKF9jb250ZXh0MTEpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMS5wcmV2ID0gX2NvbnRleHQxMS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5kZWxldGUocmVzb3VyY2VfdXJpICsgJy9wcm9wb3N0YXMvJyArIHBheWxvYWQuaWRfcHJvcG9zdGEsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJ4LWFjY2Vzcy10b2tlbiI6IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSkuYWNjZXNzVG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTEuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTExKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZmV0Y2hVc2VyQnlUeXBlOiBmdW5jdGlvbiBmZXRjaFVzZXJCeVR5cGUoY29udGV4dCwgaWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTEyKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEyJChfY29udGV4dDEyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTIucHJldiA9IF9jb250ZXh0MTIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHJlc291cmNlX3VyaSArICIvdXNlcnM/aWRUaXBvVXNlcj0iICsgaWQsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJ4LWFjY2Vzcy10b2tlbiI6IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSkuYWNjZXNzVG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQxMi5zZW50OwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIlNFVFVTRVJUWVBFIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTEyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZmV0Y2hQcm9wb3NhbHM6IGZ1bmN0aW9uIGZldGNoUHJvcG9zYWxzKGNvbnRleHQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTEzKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEzJChfY29udGV4dDEzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTMucHJldiA9IF9jb250ZXh0MTMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHJlc291cmNlX3VyaSArICIvcHJvcG9zdGFzL2FwcHJvdmVkIiwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgIngtYWNjZXNzLXRva2VuIjogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpKS5hY2Nlc3NUb2tlbgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDEzLnNlbnQ7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgiU0VUUFJPUE9TQUxTIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTEzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZmV0Y2hQcm9wb3NhbEJ5SWQ6IGZ1bmN0aW9uIGZldGNoUHJvcG9zYWxCeUlkKGNvbnRleHQsIGlkKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxNCgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNCQoX2NvbnRleHQxNCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDE0LnByZXYgPSBfY29udGV4dDE0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDE0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChyZXNvdXJjZV91cmkgKyAiL3Byb3Bvc3Rhcy8iICsgaWQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0MTQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJTRVRQUk9QT1NBTCIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUxNCk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGZldGNoUG9ycG9zYWxGb3JBcHByb3ZhbDogZnVuY3Rpb24gZmV0Y2hQb3Jwb3NhbEZvckFwcHJvdmFsKGNvbnRleHQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE1KCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTE1JChfY29udGV4dDE1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTUucHJldiA9IF9jb250ZXh0MTUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTUubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHJlc291cmNlX3VyaSArICIvcHJvcG9zdGFzL3BlbmRpbmciLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAieC1hY2Nlc3MtdG9rZW4iOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyIikpLmFjY2Vzc1Rva2VuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0MTUuc2VudDsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJTRVRQUk9QT1NBTEJZU1RBVEUiLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMTUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBmZXRjaE15Q2FuZGlkYXR1cmFzOiBmdW5jdGlvbiBmZXRjaE15Q2FuZGlkYXR1cmFzKGNvbnRleHQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE2KCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTE2JChfY29udGV4dDE2KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTYucHJldiA9IF9jb250ZXh0MTYubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTYubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHJlc291cmNlX3VyaSArICIvY2FuZGlkYXR1cmFzL21pbmhhcyIsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJ4LWFjY2Vzcy10b2tlbiI6IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSkuYWNjZXNzVG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQxNi5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgiU0VUTVlDQU5ESURBVFVSQVMiLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMTYpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBlbGltaW5hcjogZnVuY3Rpb24gZWxpbWluYXIoY29udGV4dCwgaWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE3KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTckKF9jb250ZXh0MTcpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNy5wcmV2ID0gX2NvbnRleHQxNy5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIkRFTEVURVBST1BPU0FMIiwgaWQpOwogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInByb3Bvc2FscyIsIEpTT04uc3RyaW5naWZ5KGNvbnRleHQuc3RhdGUucHJvcG9zYWxzKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTcuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTE3KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE4KCkgewogICAgICAgIHZhciBsb2dnZWRVc2VyOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTgkKF9jb250ZXh0MTgpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxOC5wcmV2ID0gX2NvbnRleHQxOC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQxOC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTgubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gQXV0aFNlcnZpY2UubG9naW4ocGF5bG9hZCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGxvZ2dlZFVzZXIgPSBfY29udGV4dDE4LnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhsb2dnZWRVc2VyKTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJMT0dJTiIsIGxvZ2dlZFVzZXIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQxOC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQxOC5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTgudDAgPSBfY29udGV4dDE4WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTguYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDE4LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTguc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTE4LCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KGNvbnRleHQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTE5KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTkkKF9jb250ZXh0MTkpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxOS5wcmV2ID0gX2NvbnRleHQxOS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIkxPR09VVCIpOwogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oInVzZXIiKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxOS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMTkpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoY29udGV4dCwgcGF5bG9hZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjAoKSB7CiAgICAgICAgdmFyIHVzZXIsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjAkKF9jb250ZXh0MjApIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyMC5wcmV2ID0gX2NvbnRleHQyMC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgLy8gdmVyaWZpY2FyIHNlIGVzdGUgdXNlciBqw6EgZXhpc3RlCiAgICAgICAgICAgICAgICB1c2VyID0gY29udGV4dC5zdGF0ZS51c2Vycy5maW5kKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB1c2VyLmVtYWlsID09PSBwYXlsb2FkLmVtYWlsOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKCEodXNlciA9PSB1bmRlZmluZWQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0MjAubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MjAubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gQXV0aFNlcnZpY2UucmVnaXN0ZXIocGF5bG9hZCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyMC5zZW50OwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIlJFR0lTVEVSIiwgcmVzcG9uc2UpOyAvL2xvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VycyIsIEpTT04uc3RyaW5naWZ5KGNvbnRleHQuc3RhdGUudXNlcnMpKTsKCiAgICAgICAgICAgICAgICBfY29udGV4dDIwLm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIwLmFicnVwdCgicmV0dXJuIiwgIkVtYWlsIGrDoSBleGlzdGVudGUiKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMjApOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZWdpc3RlclByb3Bvc2FsOiBmdW5jdGlvbiByZWdpc3RlclByb3Bvc2FsKGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIxKCkgewogICAgICAgIHZhciBwcm9wb3NhbCwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMSQoX2NvbnRleHQyMSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIxLnByZXYgPSBfY29udGV4dDIxLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBwcm9wb3NhbCA9IGNvbnRleHQuc3RhdGUucHJvcG9zYWxzLmZpbmQoZnVuY3Rpb24gKHByb3Bvc2FsKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wb3NhbC50aXR1bG8gPT0gcGF5bG9hZC50aXR1bG87CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBpZiAoIShwcm9wb3NhbCA9PSB1bmRlZmluZWQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0MjEubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwYXlsb2FkKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjEubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChyZXNvdXJjZV91cmkgKyAiL3Byb3Bvc3RhcyIsIHBheWxvYWQsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJ4LWFjY2Vzcy10b2tlbiI6IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXIiKSkuYWNjZXNzVG9rZW4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyMS5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7IC8vbGV0IHByb3Bvc2FsID0gcGF5bG9hZAogICAgICAgICAgICAgICAgLy9wcm9wb3NhbFsnaWRfcHJvcG9zdGEnXT1yZXNwb25zZS4KICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb3Bvc2FsKTsKCiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgiUkVHSVNURVJQUk9QT1NBTCIsIHByb3Bvc2FsKTsgLy9sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncHJvcG9zYWxzJywgSlNPTi5zdHJpbmdpZnkoY29udGV4dC5zdGF0ZS5wcm9wb3NhbHMpKQoKICAgICAgICAgICAgICAgIF9jb250ZXh0MjEubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICB0aHJvdyAiUHJvcG9zdGEgasOhIGNyaWFkYSEgUG9yIGZhdm9yIHJldmVqYSBvcyBjYW1wb3MiOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMjEpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZWdpc3Rlck5vdGlmaWNhdGlvbjogZnVuY3Rpb24gcmVnaXN0ZXJOb3RpZmljYXRpb24oY29udGV4dCwgcGF5bG9hZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMiQoX2NvbnRleHQyMikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIyLnByZXYgPSBfY29udGV4dDIyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgiUkVHSVNURVJOT1RJRklDQVRJT04iLCBwYXlsb2FkKTsKICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJub3RpZmljYXRpb24iLCBKU09OLnN0cmluZ2lmeShjb250ZXh0LnN0YXRlLm5vdGlmaWNhdGlvbnMpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMjIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhcHJvdmFyOiBmdW5jdGlvbiBhcHJvdmFyKGNvbnRleHQsIGRhdGEpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIzKCkgewogICAgICAgIHZhciBlZGl0ZWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMyQoX2NvbnRleHQyMykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIzLnByZXYgPSBfY29udGV4dDIzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLnByb3Bvc3RhKTsKICAgICAgICAgICAgICAgIGVkaXRlZCA9IGNvbnRleHQuc3RhdGUucHJvcG9zYWxzLmZpbHRlcihmdW5jdGlvbiAocHJvcG9zYWwpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3Bvc2FsLmlkID09IGRhdGEucHJvcG9zdGEuaWQ7CiAgICAgICAgICAgICAgICB9KVswXTsKICAgICAgICAgICAgICAgIGVkaXRlZC5lc3RhZG8gPSAiYXByb3ZhZG8iOwogICAgICAgICAgICAgICAgZWRpdGVkLm9yaWVudGFkb3IgPSBkYXRhLmZvcm0ub3JpZW50YWRvcjsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJBTFRFUkFSUFJPUCIsIGVkaXRlZCk7CiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgicHJvcG9zYWxzIiwgSlNPTi5zdHJpbmdpZnkoY29udGV4dC5zdGF0ZS5wcm9wb3NhbHMpKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMy5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMjMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZXZpc2FvOiBmdW5jdGlvbiByZXZpc2FvKGNvbnRleHQsIGRhdGEpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTI0KCkgewogICAgICAgIHZhciBlZGl0ZWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyNCQoX2NvbnRleHQyNCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDI0LnByZXYgPSBfY29udGV4dDI0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBlZGl0ZWQgPSBjb250ZXh0LnN0YXRlLnByb3Bvc2Fscy5maWx0ZXIoZnVuY3Rpb24gKHByb3Bvc2FsKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wb3NhbC5pZCA9PSBkYXRhLnByb3Bvc3RhLmlkOwogICAgICAgICAgICAgICAgfSlbMF07CiAgICAgICAgICAgICAgICBlZGl0ZWQuZXN0YWRvID0gInJldmlzYW8iOwogICAgICAgICAgICAgICAgZWRpdGVkLm1zZ1JldmlzYW8gPSBkYXRhLmZvcm0ucmV2aXNhbzsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJBTFRFUkFSUFJPUCIsIGVkaXRlZCk7CiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgicHJvcG9zYWxzIiwgSlNPTi5zdHJpbmdpZnkoY29udGV4dC5zdGF0ZS5wcm9wb3NhbHMpKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyNC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMjQpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjYW5kaWRhdGFyOiBmdW5jdGlvbiBjYW5kaWRhdGFyKGNvbnRleHQsIGRhdGEpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTI1KCkgewogICAgICAgIHZhciBhcHBsaWNhdGlvbjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTI1JChfY29udGV4dDI1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MjUucHJldiA9IF9jb250ZXh0MjUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGFwcGxpY2F0aW9uID0gewogICAgICAgICAgICAgICAgICB1c2VyOiBkYXRhLmZvcm0udXNlciwKICAgICAgICAgICAgICAgICAgaWRfcHJvcG9zdGE6IGRhdGEucHJvcG9zdGEuaWQsCiAgICAgICAgICAgICAgICAgIG1lbnNhZ2VtOiBkYXRhLmZvcm0uY2FuZGlkYXR1cmEKICAgICAgICAgICAgICAgIH07IC8vY29uc29sZS5sb2coYXBwbGljYXRpb24pCgogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIkNBTkRJREFUVVJBIiwgYXBwbGljYXRpb24pOwogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oImFwcGxpY2F0aW9ucyIsIEpTT04uc3RyaW5naWZ5KGNvbnRleHQuc3RhdGUuYXBwbGljYXRpb25zKSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTI1KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVFJFU1A6IGZ1bmN0aW9uIFNFVFJFU1Aoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuYW5zd2VycyA9IGRhdGE7CiAgICB9LAogICAgU0VUVEVNQVM6IGZ1bmN0aW9uIFNFVFRFTUFTKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnRlbWFzID0gZGF0YTsKICAgIH0sCiAgICBTRVRGT1JVTlM6IGZ1bmN0aW9uIFNFVEZPUlVOUyhzdGF0ZSwgZGF0YSkgewogICAgICBzdGF0ZS5mb3J1bnMgPSBkYXRhOwogICAgfSwKICAgIFNFVFVTRVI6IGZ1bmN0aW9uIFNFVFVTRVIoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuUHJvcG9zYWxVc2VyID0gZGF0YTsKICAgIH0sCiAgICBTRVRVU0VSVFlQRTogZnVuY3Rpb24gU0VUVVNFUlRZUEUoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUudXNlcnMgPSBkYXRhOwogICAgfSwKICAgIFNFVFBST1BPU0FMUzogZnVuY3Rpb24gU0VUUFJPUE9TQUxTKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnByb3Bvc2FscyA9IGRhdGE7CiAgICB9LAogICAgU0VUUFJPUE9TQUxCWVNUQVRFOiBmdW5jdGlvbiBTRVRQUk9QT1NBTEJZU1RBVEUoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUucHJvcG9zYWxzID0gZGF0YTsKICAgIH0sCiAgICBTRVRQUk9QT1NBTDogZnVuY3Rpb24gU0VUUFJPUE9TQUwoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUucHJvcG9zYWwgPSBkYXRhLnRpdHVsbzsKICAgIH0sCiAgICBERUxFVEVQUk9QT1NBTDogZnVuY3Rpb24gREVMRVRFUFJPUE9TQUwoc3RhdGUsIGlkKSB7CiAgICAgIHN0YXRlLnByb3Bvc2FscyA9IHN0YXRlLnByb3Bvc2Fscy5maWx0ZXIoZnVuY3Rpb24gKHByb3Bvc2FsKSB7CiAgICAgICAgcmV0dXJuIHByb3Bvc2FsLmlkICE9IGlkOwogICAgICB9KTsKICAgIH0sCiAgICBDQU5ESURBVFVSQTogZnVuY3Rpb24gQ0FORElEQVRVUkEoc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUuYXBwbGljYXRpb25zLnB1c2goZGF0YSk7CiAgICB9LAogICAgQUxURVJBUlBST1A6IGZ1bmN0aW9uIEFMVEVSQVJQUk9QKHN0YXRlLCBkYXRhKSB7CiAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICBzdGF0ZS5wcm9wb3NhbHMgPSBzdGF0ZS5wcm9wb3NhbHMubWFwKGZ1bmN0aW9uIChwcm9wb3NhbCkgewogICAgICAgIHJldHVybiBwcm9wb3NhbC5pZCA9PSBkYXRhLmlkID8gZGF0YSA6IHByb3Bvc2FsOwogICAgICB9KTsKICAgIH0sCiAgICBMT0dJTjogZnVuY3Rpb24gTE9HSU4oc3RhdGUsIHVzZXIpIHsKICAgICAgc3RhdGUubG9nZ2VkVXNlciA9IHVzZXI7CiAgICB9LAogICAgTE9HT1VUOiBmdW5jdGlvbiBMT0dPVVQoc3RhdGUpIHsKICAgICAgc3RhdGUubG9nZ2VkVXNlciA9ICIiOwogICAgfSwKICAgIFJFR0lTVEVSOiBmdW5jdGlvbiBSRUdJU1RFUihzdGF0ZSwgdXNlcikgewogICAgICBzdGF0ZS51c2Vycy5wdXNoKHVzZXIpOwogICAgfSwKICAgIFJFR0lTVEVSUFJPUE9TQUw6IGZ1bmN0aW9uIFJFR0lTVEVSUFJPUE9TQUwoc3RhdGUsIHByb3Bvc2FsKSB7CiAgICAgIHN0YXRlLnByb3Bvc2Fscy5wdXNoKHByb3Bvc2FsKTsKICAgIH0sCiAgICBSRUdJU1RFUk5PVElGSUNBVElPTjogZnVuY3Rpb24gUkVHSVNURVJOT1RJRklDQVRJT04oc3RhdGUsIG5vdGlmKSB7CiAgICAgIHN0YXRlLm5vdGlmaWNhdGlvbnMucHVzaChub3RpZik7CiAgICB9LAogICAgU0VUTVlDQU5ESURBVFVSQVM6IGZ1bmN0aW9uIFNFVE1ZQ0FORElEQVRVUkFTKHN0YXRlLCBwcm9wb3NhbHMpIHsKICAgICAgY29uc29sZS5sb2coIkFxdWkgw6kgY29tbWl0ICIgKyBwcm9wb3NhbHMpOwogICAgICBzdGF0ZS5hcHBsaWNhdGlvbnMgPSBwcm9wb3NhbHM7CiAgICAgIGNvbnNvbGUubG9nKHByb3Bvc2Fscyk7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["C:/Users/Alexandre/Desktop/WebpII_2semestre/Tsiw_App/ProjetoInterdisciplinar2-1/src/store/index.js"],"names":["Vue","Vuex","axios","AuthService","use","resource_uri","Store","state","ProposalUser","users","loggedUser","localStorage","getItem","JSON","parse","proposals","applications","proposal","foruns","temas","answers","notifications","getters","getForuns","search","filter","forum","titulo","includes","getPretendedUserName","getNextProposalId","length","id","getNextnotificationId","getFilterdAnswers","answer","texto_resposta","getFilterdtemas","tema","getMyCandidaturas","getProposalTitle","getUsers","getLoggedUser","username","isLoggedUser","getProposals","getFilterdProposals","type","stateF","type2","card_filter","nome_entidade","toUpperCase","prop","id_tipo_estado","getType","tipo","getNotification","actions","createForum","context","payload","post","headers","accessToken","response","location","reload","commit","data","fetchAnswers","get","id_tema","fetchTemasByIdForum","id_forum","fetchMyForuns","fetchMyProposals","putUpdateCandidatura","put","id_proposta","putUpdateProposal","putAproveProposal","console","log","deleteMyCandidatura","delete","fetchUserById","deleteProposals","fetchUserByType","fetchProposals","fetchProposalById","fetchPorposalForApproval","fetchMyCandidaturas","eliminar","setItem","stringify","login","logout","removeItem","register","user","find","email","undefined","registerProposal","registerNotification","aprovar","proposta","edited","estado","orientador","form","revisao","msgRevisao","candidatar","application","mensagem","candidatura","mutations","SETRESP","SETTEMAS","SETFORUNS","SETUSER","SETUSERTYPE","SETPROPOSALS","SETPROPOSALBYSTATE","SETPROPOSAL","DELETEPROPOSAL","CANDIDATURA","push","ALTERARPROP","map","LOGIN","LOGOUT","REGISTER","REGISTERPROPOSAL","REGISTERNOTIFICATION","notif","SETMYCANDIDATURAS"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AACA,IAAMI,YAAY,GAAG,uBAArB;AAEA,eAAe,IAAIJ,IAAI,CAACK,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE,EADT;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,UAAU,EAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADQ,GAER,EALC;AAMLG,IAAAA,SAAS,EAAE,EANN;AAOLC,IAAAA,YAAY,EAAE,EAPT;AAQLC,IAAAA,QAAQ,EAAE,EARL;AASLC,IAAAA,MAAM,EAAE,EATH;AAULC,IAAAA,KAAK,EAAC,EAVD;AAWLC,IAAAA,OAAO,EAAC,EAXH;AAYLC,IAAAA,aAAa,EAAEV,YAAY,CAACC,OAAb,CAAqB,cAArB,IACXC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADW,GAEX;AAdC,GADqB;AAiB5BU,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,mBAAChB,KAAD;AAAA,aAAU,UAACiB,MAAD,EAAW;AAC9B,YAAIA,MAAJ,EAAY;AACV,iBAAOjB,KAAK,CAACW,MAAN,CAAaO,MAAb,CAAoB,UAAAC,KAAK;AAAA,mBAAEA,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsBJ,MAAtB,CAAF;AAAA,WAAzB,CAAP;AACD;;AACD,eAAOjB,KAAK,CAACW,MAAb;AACD,OALU;AAAA,KADJ;AAOPW,IAAAA,oBAAoB,EAAE,8BAACtB,KAAD,EAAW;AAC/B,aAAOA,KAAK,CAACC,YAAb;AACD,KATM;AAUPsB,IAAAA,iBAAiB,EAAE,2BAACvB,KAAD,EAAW;AAC5B,aAAOA,KAAK,CAACQ,SAAN,CAAgBgB,MAAhB,GAAyB,CAAzB,GACHxB,KAAK,CAACQ,SAAN,CAAgBR,KAAK,CAACQ,SAAN,CAAgBgB,MAAhB,GAAyB,CAAzC,EAA4CC,EAA5C,GAAiD,CAD9C,GAEH,CAFJ;AAGD,KAdM;AAePC,IAAAA,qBAAqB,EAAE,+BAAC1B,KAAD,EAAW;AAChC,aAAOA,KAAK,CAACc,aAAN,CAAoBU,MAApB,GAA6B,CAA7B,GACHxB,KAAK,CAACc,aAAN,CAAoBd,KAAK,CAACc,aAAN,CAAoBU,MAApB,GAA6B,CAAjD,EAAoDC,EAApD,GAAyD,CADtD,GAEH,CAFJ;AAGD,KAnBM;AAoBPE,IAAAA,iBAAiB,EAAC,2BAAC3B,KAAD;AAAA,aAAS,UAACiB,MAAD,EAAU;AACnC,YAAGA,MAAH,EAAU;AACR,iBAAOjB,KAAK,CAACa,OAAN,CAAcK,MAAd,CAAqB,UAAAU,MAAM;AAAA,mBAAEA,MAAM,CAACC,cAAP,CAAsBR,QAAtB,CAA+BJ,MAA/B,CAAF;AAAA,WAA3B,CAAP;AACD;;AACD,eAAOjB,KAAK,CAACa,OAAb;AACD,OALiB;AAAA,KApBX;AA0BPiB,IAAAA,eAAe,EAAC,yBAAC9B,KAAD;AAAA,aAAS,UAACiB,MAAD,EAAU;AACjC,YAAIA,MAAJ,EAAY;AACV,iBAAOjB,KAAK,CAACY,KAAN,CAAYM,MAAZ,CAAmB,UAAAa,IAAI;AAAA,mBAAEA,IAAI,CAACX,MAAL,CAAYC,QAAZ,CAAqBJ,MAArB,CAAF;AAAA,WAAvB,CAAP;AACD;;AACD,eAAOjB,KAAK,CAACY,KAAb;AACD,OALe;AAAA,KA1BT;AAgCPoB,IAAAA,iBAAiB,EAAE,2BAAChC,KAAD,EAAW;AAC5B,aAAOA,KAAK,CAACS,YAAb;AACD,KAlCM;AAmCPwB,IAAAA,gBAAgB,EAAE,0BAACjC,KAAD,EAAW;AAC3B,aAAOA,KAAK,CAACU,QAAb;AACD,KArCM;AAsCPwB,IAAAA,QAAQ,EAAE,kBAAClC,KAAD;AAAA,aAAWA,KAAK,CAACE,KAAjB;AAAA,KAtCH;AAuCPiC,IAAAA,aAAa,EAAE,uBAACnC,KAAD;AAAA,aAAWA,KAAK,CAACG,UAAN,CAAiBiC,QAA5B;AAAA,KAvCR;AAwCPC,IAAAA,YAAY,EAAE,sBAACrC,KAAD;AAAA,aAAYA,KAAK,CAACG,UAAN,IAAoB,EAApB,GAAyB,KAAzB,GAAiC,IAA7C;AAAA,KAxCP;AAyCPmC,IAAAA,YAAY,EAAE,sBAACtC,KAAD,EAAW;AACvB,aAAOA,KAAK,CAACQ,SAAb;AACD,KA3CM;AA4CP+B,IAAAA,mBAAmB,EAAE,6BAACvC,KAAD;AAAA,aAAW,UAACwC,IAAD,EAAOvB,MAAP,EAAewB,MAAf,EAA0B;AACxD,YAAIC,KAAJ;;AACA,YAAIF,IAAI,IAAI,KAAZ,EAAmB;AACjBE,UAAAA,KAAK,GAAGF,IAAI,IAAI,SAAR,GAAoB,KAApB,GAA4B,IAApC;AACD;;AACD,YAAIG,WAAW,GAAG3C,KAAK,CAACQ,SAAN,CAAgBU,MAAhB,CAChB,UAACR,QAAD;AAAA,iBACE,CAAEA,QAAQ,CAACkC,aAAT,IAA0B,IAA3B,IAAoCF,KAApC,IAA6CF,IAAI,IAAI,KAAtD,MACC9B,QAAQ,CAACU,MAAT,CAAgByB,WAAhB,GAA8BxB,QAA9B,CAAuCJ,MAAM,CAAC4B,WAAP,EAAvC,KACC5B,MAAM,IAAI,EAFZ,CADF;AAAA,SADgB,CAAlB;;AAMA,YAAIwB,MAAM,IAAI,CAAV,IAAeA,MAAM,IAAI,CAAzB,IAA8BA,MAAM,IAAI,CAA5C,EAA+C;AAC7CE,UAAAA,WAAW,GAAGA,WAAW,CAACzB,MAAZ,CACZ,UAAC4B,IAAD;AAAA,mBAAUA,IAAI,CAACC,cAAL,IAAuBN,MAAjC;AAAA,WADY,CAAd;AAGD;;AACD,eAAOE,WAAP;AACD,OAjBoB;AAAA,KA5Cd;AA8DPK,IAAAA,OAAO,EAAE,iBAAChD,KAAD,EAAW;AAClB,aAAOA,KAAK,CAACQ,SAAN,CAAgByC,IAAvB;AACD,KAhEM;AAiEPC,IAAAA,eAAe,EAAE,yBAAClD,KAAD,EAAW;AAC1B,aAAOA,KAAK,CAACc,aAAb;AACD;AAnEM,GAjBmB;AAsF5BqC,EAAAA,OAAO,EAAE;AACDC,IAAAA,WADC,uBACWC,OADX,EACmBC,OADnB,EAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGP3D,KAAK,CAAC4D,IAAN,CAAWzD,YAAY,GAAG,SAA1B,EAAoCwD,OAApC,EAA6C;AAClEE,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AADyD,iBAA7C,CAHO;;AAAA;AAGxBC,gBAAAA,QAHwB;AAU9BC,gBAAAA,QAAQ,CAACC,MAAT;AAEAP,gBAAAA,OAAO,CAACQ,MAAR,CAAe,SAAf,EAA0BH,QAAQ,CAACI,IAAnC;AAZ8B;AAAA;;AAAA;AAAA;AAAA;AAc9BT,gBAAAA,OAAO,CAACQ,MAAR,CAAe,SAAf,EAA0B,EAA1B;;AAd8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBjC,KAlBM;AAsBDE,IAAAA,YAtBC,wBAsBYV,OAtBZ,EAsBoBC,OAtBpB,EAsB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGR3D,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,gBAAf,GAAgCwD,OAAO,CAACW,OAAxC,GAAgD,YAA1D,EAAwE;AAC7FT,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AADoF,iBAAxE,CAHQ;;AAAA;AAGzBC,gBAAAA,QAHyB;AAU/BL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,SAAf,EAA0BH,QAAQ,CAACI,IAAnC;AAV+B;AAAA;;AAAA;AAAA;AAAA;AAY/BT,gBAAAA,OAAO,CAACQ,MAAR,CAAe,SAAf,EAA0B,EAA1B;;AAZ+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAclC,KApCM;AAqCDK,IAAAA,mBArCC,+BAqCmBb,OArCnB,EAqC2BC,OArC3B,EAqCmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEf3D,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,UAAf,GAA0BwD,OAAO,CAACa,QAAlC,GAA2C,SAArD,EAAgE;AACrFX,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD4E,iBAAhE,CAFe;;AAAA;AAEhCC,gBAAAA,QAFgC;AAQtCL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,UAAf,EAA2BH,QAAQ,CAACI,IAApC;AARsC;AAAA;;AAAA;AAAA;AAAA;AAUtCT,gBAAAA,OAAO,CAACQ,MAAR,CAAe,UAAf,EAA2B,EAA3B;;AAVsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYzC,KAjDM;AAkDDO,IAAAA,aAlDC,yBAkDaf,OAlDb,EAkDqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACH1D,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,SAAzB,EAAoC;AACzD0D,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AADgD,iBAApC,CADG;;AAAA;AACpBC,gBAAAA,QADoB;AAO1BL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,WAAf,EAA4BH,QAAQ,CAACI,IAArC;;AAP0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ3B,KA1DM;AA2DDO,IAAAA,gBA3DC,4BA2DgBhB,OA3DhB,EA2DyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACP1D,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,mBAAzB,EAA8C;AACnE0D,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD0D,iBAA9C,CADO;;AAAA;AACxBC,gBAAAA,QADwB;AAO9BL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,cAAf,EAA+BH,QAAQ,CAACI,IAAxC;;AAP8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ/B,KAnEM;AAoEDQ,IAAAA,oBApEC,gCAoEoBjB,OApEpB,EAoE6BC,OApE7B,EAoEsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACnC3D,KAAK,CAAC4E,GAAN,CAAUzE,YAAY,GAAG,aAAf,GAAgCwD,OAAO,CAACkB,WAAxC,GAAsD,eAAhE,EAAkFlB,OAAlF,EAA2F;AACjGE,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AADwF,iBAA3F,CADmC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO5C,KA3EM;AA4EDgB,IAAAA,iBA5EC,6BA4EiBpB,OA5EjB,EA4E0BC,OA5E1B,EA4EmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAClC3D,KAAK,CAAC4E,GAAN,CAAUzE,YAAY,GAAG,aAAf,GAA+BwD,OAAO,CAACkB,WAAvC,GAAqD,OAA/D,EAAwElB,OAAxE,EAAiF;AACrFE,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD4E,iBAAjF,CADkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOzC,KAnFM;AAoFDiB,IAAAA,iBApFC,6BAoFiBrB,OApFjB,EAoF0BC,OApF1B,EAoFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AACxCqB,gBAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AADwC;AAAA,uBAElC3D,KAAK,CAAC4E,GAAN,CAAUzE,YAAY,GAAG,aAAf,GAA+BwD,OAAO,CAACkB,WAAvC,GAAqD,OAA/D,EAAwElB,OAAxE,EAAiF;AACrFE,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD4E,iBAAjF,CAFkC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzC,KA5FM;AA6FDoB,IAAAA,mBA7FC,+BA6FmBxB,OA7FnB,EA6F4BC,OA7F5B,EA6FqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACpC3D,KAAK,CAACmF,MAAN,CAAahF,YAAY,GAAG,aAAf,GAA+BwD,OAAO,CAACkB,WAAvC,GAAqD,eAAlE,EAAmF;AACvFhB,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD8E,iBAAnF,CADoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3C,KApGM;AAqGDsB,IAAAA,aArGC,yBAqGa1B,OArGb,EAqGsB5B,EArGtB,EAqG0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACR9B,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,SAAf,GAA2B2B,EAArC,CADQ;;AAAA;AACzBiC,gBAAAA,QADyB;AAE/BL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,SAAf,EAA0BH,QAAQ,CAACI,IAAnC,EAF+B,CAG/B;;AAH+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhC,KAzGM;AA2GDkB,IAAAA,eA3GC,2BA2Ge3B,OA3Gf,EA2GwBC,OA3GxB,EA2GiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAChC3D,KAAK,CAACmF,MAAN,CAAahF,YAAY,GAAG,aAAf,GAA+BwD,OAAO,CAACkB,WAApD,EAAiE;AACrEhB,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD4D,iBAAjE,CADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOvC,KAlHM;AAoHAwB,IAAAA,eApHA,2BAoHgB5B,OApHhB,EAoHyB5B,EApHzB,EAoH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACV9B,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,oBAAf,GAAsC2B,EAAhD,EAAoD;AAC1E+B,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AADiE,iBAApD,CADU;;AAAA;AAC3BC,gBAAAA,QAD2B;AAOjCL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,aAAf,EAA8BH,QAAQ,CAACI,IAAvC;;AAPiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQlC,KA5HK;AA6HDoB,IAAAA,cA7HC,0BA6Hc7B,OA7Hd,EA6HuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL1D,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,qBAAzB,EAAgD;AACrE0D,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD4D,iBAAhD,CADK;;AAAA;AACtBC,gBAAAA,QADsB;AAO5BL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,cAAf,EAA+BH,QAAQ,CAACI,IAAxC;;AAP4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ7B,KArIM;AAsIDqB,IAAAA,iBAtIC,6BAsIiB9B,OAtIjB,EAsI0B5B,EAtI1B,EAsI8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACZ9B,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,aAAf,GAA+B2B,EAAzC,CADY;;AAAA;AAC7BiC,gBAAAA,QAD6B;AAEnCL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,aAAf,EAA8BH,QAAQ,CAACI,IAAvC;;AAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGpC,KAzIM;AA0IDsB,IAAAA,wBA1IC,oCA0IwB/B,OA1IxB,EA0IgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACd1D,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,oBAAzB,EAA+C;AACpE0D,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD2D,iBAA/C,CADc;;AAAA;AAC/BC,gBAAAA,QAD+B;AAOrCL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,oBAAf,EAAqCH,QAAQ,CAACI,IAA9C;;AAPqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQtC,KAlJM;AAmJDuB,IAAAA,mBAnJC,+BAmJmBhC,OAnJnB,EAmJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACV1D,KAAK,CAACqE,GAAN,CAAUlE,YAAY,GAAG,sBAAzB,EAAiD;AACtE0D,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD6D,iBAAjD,CADU;;AAAA;AAC3BC,gBAAAA,QAD2B;AAOjCiB,gBAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACI,IAArB;AACAT,gBAAAA,OAAO,CAACQ,MAAR,CAAe,mBAAf,EAAoCH,QAAQ,CAACI,IAA7C;;AARiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASlC,KA5JM;AA6JDwB,IAAAA,QA7JC,oBA6JQjC,OA7JR,EA6JiB5B,EA7JjB,EA6JqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B4B,gBAAAA,OAAO,CAACQ,MAAR,CAAe,gBAAf,EAAiCpC,EAAjC;AACArB,gBAAAA,YAAY,CAACmF,OAAb,CACE,WADF,EAEEjF,IAAI,CAACkF,SAAL,CAAenC,OAAO,CAACrD,KAAR,CAAcQ,SAA7B,CAFF;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM3B,KAnKM;AAoKDiF,IAAAA,KApKC,iBAoKKpC,OApKL,EAoKcC,OApKd,EAoKuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAED1D,WAAW,CAAC6F,KAAZ,CAAkBnC,OAAlB,CAFC;;AAAA;AAEpBnD,gBAAAA,UAFoB;AAG1BwE,gBAAAA,OAAO,CAACC,GAAR,CAAYzE,UAAZ;AACAkD,gBAAAA,OAAO,CAACQ,MAAR,CAAe,OAAf,EAAwB1D,UAAxB;AAJ0B;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoB7B,KAxLM;AAyLDuF,IAAAA,MAzLC,kBAyLMrC,OAzLN,EAyLe;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBA,gBAAAA,OAAO,CAACQ,MAAR,CAAe,QAAf;AACAzD,gBAAAA,YAAY,CAACuF,UAAb,CAAwB,MAAxB;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGrB,KA5LM;AA6LDC,IAAAA,QA7LC,oBA6LQvC,OA7LR,EA6LiBC,OA7LjB,EA6L0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B;AACMuC,gBAAAA,IAFyB,GAElBxC,OAAO,CAACrD,KAAR,CAAcE,KAAd,CAAoB4F,IAApB,CACX,UAACD,IAAD;AAAA,yBAAUA,IAAI,CAACE,KAAL,KAAezC,OAAO,CAACyC,KAAjC;AAAA,iBADW,CAFkB;;AAAA,sBAK3BF,IAAI,IAAIG,SALmB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMRpG,WAAW,CAACgG,QAAZ,CAAqBtC,OAArB,CANQ;;AAAA;AAMzBI,gBAAAA,QANyB;AAQ7BL,gBAAAA,OAAO,CAACQ,MAAR,CAAe,UAAf,EAA2BH,QAA3B,EAR6B,CAS7B;;AAT6B;AAAA;;AAAA;AAAA,mDAWtB,oBAXsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAahC,KA1MM;AA2MDuC,IAAAA,gBA3MC,4BA2MgB5C,OA3MhB,EA2MyBC,OA3MzB,EA2MkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACjC5C,gBAAAA,QADiC,GACtB2C,OAAO,CAACrD,KAAR,CAAcQ,SAAd,CAAwBsF,IAAxB,CACf,UAACpF,QAAD;AAAA,yBAAcA,QAAQ,CAACU,MAAT,IAAmBkC,OAAO,CAAClC,MAAzC;AAAA,iBADe,CADsB;;AAAA,sBAInCV,QAAQ,IAAIsF,SAJuB;AAAA;AAAA;AAAA;;AAKrCrB,gBAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AALqC;AAAA,uBAMhB3D,KAAK,CAAC4D,IAAN,CAAWzD,YAAY,GAAG,YAA1B,EAAwCwD,OAAxC,EAAiD;AACpEE,kBAAAA,OAAO,EAAE;AACP,sCAAkBlD,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EACfoD;AAFI;AAD2D,iBAAjD,CANgB;;AAAA;AAMjCC,gBAAAA,QANiC;AAYrCiB,gBAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACI,IAArB,EAZqC,CAarC;AACA;AACA;;AACAT,gBAAAA,OAAO,CAACQ,MAAR,CAAe,kBAAf,EAAmCnD,QAAnC,EAhBqC,CAiBrC;;AAjBqC;AAAA;;AAAA;AAAA,sBAmB/B,gDAnB+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBxC,KAhOM;AAkODwF,IAAAA,oBAlOC,gCAkOoB7C,OAlOpB,EAkO6BC,OAlO7B,EAkOsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3CD,gBAAAA,OAAO,CAACQ,MAAR,CAAe,sBAAf,EAAuCP,OAAvC;AACAlD,gBAAAA,YAAY,CAACmF,OAAb,CACE,cADF,EAEEjF,IAAI,CAACkF,SAAL,CAAenC,OAAO,CAACrD,KAAR,CAAcc,aAA7B,CAFF;;AAF2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM5C,KAxOM;AA0ODqF,IAAAA,OA1OC,mBA0OO9C,OA1OP,EA0OgBS,IA1OhB,EA0OsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3Ba,gBAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACsC,QAAjB;AACIC,gBAAAA,MAFuB,GAEdhD,OAAO,CAACrD,KAAR,CAAcQ,SAAd,CAAwBU,MAAxB,CACX,UAACR,QAAD;AAAA,yBAAcA,QAAQ,CAACe,EAAT,IAAeqC,IAAI,CAACsC,QAAL,CAAc3E,EAA3C;AAAA,iBADW,EAEX,CAFW,CAFc;AAK3B4E,gBAAAA,MAAM,CAACC,MAAP,GAAgB,UAAhB;AACAD,gBAAAA,MAAM,CAACE,UAAP,GAAoBzC,IAAI,CAAC0C,IAAL,CAAUD,UAA9B;AACAlD,gBAAAA,OAAO,CAACQ,MAAR,CAAe,aAAf,EAA8BwC,MAA9B;AACAjG,gBAAAA,YAAY,CAACmF,OAAb,CACE,WADF,EAEEjF,IAAI,CAACkF,SAAL,CAAenC,OAAO,CAACrD,KAAR,CAAcQ,SAA7B,CAFF;;AAR2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY5B,KAtPM;AAuPDiG,IAAAA,OAvPC,mBAuPOpD,OAvPP,EAuPgBS,IAvPhB,EAuPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBuC,gBAAAA,MADuB,GACdhD,OAAO,CAACrD,KAAR,CAAcQ,SAAd,CAAwBU,MAAxB,CACX,UAACR,QAAD;AAAA,yBAAcA,QAAQ,CAACe,EAAT,IAAeqC,IAAI,CAACsC,QAAL,CAAc3E,EAA3C;AAAA,iBADW,EAEX,CAFW,CADc;AAI3B4E,gBAAAA,MAAM,CAACC,MAAP,GAAgB,SAAhB;AACAD,gBAAAA,MAAM,CAACK,UAAP,GAAoB5C,IAAI,CAAC0C,IAAL,CAAUC,OAA9B;AACApD,gBAAAA,OAAO,CAACQ,MAAR,CAAe,aAAf,EAA8BwC,MAA9B;AACAjG,gBAAAA,YAAY,CAACmF,OAAb,CACE,WADF,EAEEjF,IAAI,CAACkF,SAAL,CAAenC,OAAO,CAACrD,KAAR,CAAcQ,SAA7B,CAFF;;AAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW5B,KAlQM;AAmQDmG,IAAAA,UAnQC,sBAmQUtD,OAnQV,EAmQmBS,IAnQnB,EAmQyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B8C,gBAAAA,WAD0B,GACZ;AAChBf,kBAAAA,IAAI,EAAE/B,IAAI,CAAC0C,IAAL,CAAUX,IADA;AAEhBrB,kBAAAA,WAAW,EAAEV,IAAI,CAACsC,QAAL,CAAc3E,EAFX;AAGhBoF,kBAAAA,QAAQ,EAAE/C,IAAI,CAAC0C,IAAL,CAAUM;AAHJ,iBADY,EAM9B;;AACAzD,gBAAAA,OAAO,CAACQ,MAAR,CAAe,aAAf,EAA8B+C,WAA9B;AACAxG,gBAAAA,YAAY,CAACmF,OAAb,CACE,cADF,EAEEjF,IAAI,CAACkF,SAAL,CAAenC,OAAO,CAACrD,KAAR,CAAcS,YAA7B,CAFF;;AAR8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY/B;AA/QM,GAtFmB;AAuW5BsG,EAAAA,SAAS,EAAE;AACTC,IAAAA,OADS,mBACDhH,KADC,EACK8D,IADL,EACU;AAAC9D,MAAAA,KAAK,CAACa,OAAN,GAAciD,IAAd;AAAmB,KAD9B;AAETmD,IAAAA,QAFS,oBAEAjH,KAFA,EAEM8D,IAFN,EAEW;AAAC9D,MAAAA,KAAK,CAACY,KAAN,GAAYkD,IAAZ;AAAiB,KAF7B;AAGToD,IAAAA,SAHS,qBAGClH,KAHD,EAGO8D,IAHP,EAGY;AAAC9D,MAAAA,KAAK,CAACW,MAAN,GAAamD,IAAb;AAAkB,KAH/B;AAITqD,IAAAA,OAJS,mBAIDnH,KAJC,EAIM8D,IAJN,EAIY;AACnB9D,MAAAA,KAAK,CAACC,YAAN,GAAqB6D,IAArB;AACD,KANQ;AAOTsD,IAAAA,WAPS,uBAOGpH,KAPH,EAOU8D,IAPV,EAOe;AACtB9D,MAAAA,KAAK,CAACE,KAAN,GAAc4D,IAAd;AACD,KATQ;AAUTuD,IAAAA,YAVS,wBAUIrH,KAVJ,EAUW8D,IAVX,EAUiB;AACxB9D,MAAAA,KAAK,CAACQ,SAAN,GAAkBsD,IAAlB;AACD,KAZQ;AAaTwD,IAAAA,kBAbS,8BAaUtH,KAbV,EAaiB8D,IAbjB,EAauB;AAC9B9D,MAAAA,KAAK,CAACQ,SAAN,GAAkBsD,IAAlB;AACD,KAfQ;AAgBTyD,IAAAA,WAhBS,uBAgBGvH,KAhBH,EAgBU8D,IAhBV,EAgBgB;AACvB9D,MAAAA,KAAK,CAACU,QAAN,GAAiBoD,IAAI,CAAC1C,MAAtB;AACD,KAlBQ;AAmBToG,IAAAA,cAnBS,0BAmBMxH,KAnBN,EAmBayB,EAnBb,EAmBiB;AACxBzB,MAAAA,KAAK,CAACQ,SAAN,GAAkBR,KAAK,CAACQ,SAAN,CAAgBU,MAAhB,CAAuB,UAACR,QAAD;AAAA,eAAcA,QAAQ,CAACe,EAAT,IAAeA,EAA7B;AAAA,OAAvB,CAAlB;AACD,KArBQ;AAsBTgG,IAAAA,WAtBS,uBAsBGzH,KAtBH,EAsBU8D,IAtBV,EAsBgB;AACvB9D,MAAAA,KAAK,CAACS,YAAN,CAAmBiH,IAAnB,CAAwB5D,IAAxB;AACD,KAxBQ;AAyBT6D,IAAAA,WAzBS,uBAyBG3H,KAzBH,EAyBU8D,IAzBV,EAyBgB;AACvBa,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA9D,MAAAA,KAAK,CAACQ,SAAN,GAAkBR,KAAK,CAACQ,SAAN,CAAgBoH,GAAhB,CAAoB,UAAClH,QAAD;AAAA,eACpCA,QAAQ,CAACe,EAAT,IAAeqC,IAAI,CAACrC,EAApB,GAAyBqC,IAAzB,GAAgCpD,QADI;AAAA,OAApB,CAAlB;AAGD,KA9BQ;AA+BTmH,IAAAA,KA/BS,iBA+BH7H,KA/BG,EA+BI6F,IA/BJ,EA+BU;AACjB7F,MAAAA,KAAK,CAACG,UAAN,GAAmB0F,IAAnB;AACD,KAjCQ;AAkCTiC,IAAAA,MAlCS,kBAkCF9H,KAlCE,EAkCK;AACZA,MAAAA,KAAK,CAACG,UAAN,GAAmB,EAAnB;AACD,KApCQ;AAqCT4H,IAAAA,QArCS,oBAqCA/H,KArCA,EAqCO6F,IArCP,EAqCa;AACpB7F,MAAAA,KAAK,CAACE,KAAN,CAAYwH,IAAZ,CAAiB7B,IAAjB;AACD,KAvCQ;AAwCTmC,IAAAA,gBAxCS,4BAwCQhI,KAxCR,EAwCeU,QAxCf,EAwCyB;AAChCV,MAAAA,KAAK,CAACQ,SAAN,CAAgBkH,IAAhB,CAAqBhH,QAArB;AACD,KA1CQ;AA2CTuH,IAAAA,oBA3CS,gCA2CYjI,KA3CZ,EA2CmBkI,KA3CnB,EA2C0B;AACjClI,MAAAA,KAAK,CAACc,aAAN,CAAoB4G,IAApB,CAAyBQ,KAAzB;AACD,KA7CQ;AA8CTC,IAAAA,iBA9CS,6BA8CSnI,KA9CT,EA8CgBQ,SA9ChB,EA8C2B;AAClCmE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBpE,SAA/B;AACAR,MAAAA,KAAK,CAACS,YAAN,GAAqBD,SAArB;AACAmE,MAAAA,OAAO,CAACC,GAAR,CAAYpE,SAAZ;AACD;AAlDQ;AAvWiB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n//import { UserService } from \"@/services/user.service\";\r\nimport { AuthService } from \"@/services/auth.service\";\r\n\r\nVue.use(Vuex);\r\nconst resource_uri = \"http://localhost:8080\";\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ProposalUser: \"\",\r\n    users: [],\r\n    loggedUser: localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : \"\",\r\n    proposals: [],\r\n    applications: [],\r\n    proposal: \"\",\r\n    foruns: [],\r\n    temas:[],\r\n    answers:[],\r\n    notifications: localStorage.getItem(\"notification\")\r\n      ? JSON.parse(localStorage.getItem(\"notification\"))\r\n      : [],\r\n  },\r\n  getters: {\r\n    getForuns: (state) =>(search)=> {\r\n      if (search) {\r\n        return state.foruns.filter(forum=>forum.titulo.includes(search));\r\n      }\r\n      return state.foruns;\r\n    },\r\n    getPretendedUserName: (state) => {\r\n      return state.ProposalUser;\r\n    },\r\n    getNextProposalId: (state) => {\r\n      return state.proposals.length > 0\r\n        ? state.proposals[state.proposals.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getNextnotificationId: (state) => {\r\n      return state.notifications.length > 0\r\n        ? state.notifications[state.notifications.length - 1].id + 1\r\n        : 1;\r\n    },\r\n    getFilterdAnswers:(state)=>(search)=>{\r\n      if(search){\r\n        return state.answers.filter(answer=>answer.texto_resposta.includes(search))\r\n      }\r\n      return state.answers\r\n    },\r\n    getFilterdtemas:(state)=>(search)=>{\r\n      if (search) {\r\n        return state.temas.filter(tema=>tema.titulo.includes(search));\r\n      }\r\n      return state.temas;\r\n    },\r\n    getMyCandidaturas: (state) => {\r\n      return state.applications;\r\n    },\r\n    getProposalTitle: (state) => {\r\n      return state.proposal;\r\n    },\r\n    getUsers: (state) => state.users,\r\n    getLoggedUser: (state) => state.loggedUser.username,\r\n    isLoggedUser: (state) => (state.loggedUser == \"\" ? false : true),\r\n    getProposals: (state) => {\r\n      return state.proposals;\r\n    },\r\n    getFilterdProposals: (state) => (type, search, stateF) => {\r\n      let type2;\r\n      if (type != \"all\") {\r\n        type2 = type == \"estagio\" ? false : true;\r\n      }\r\n      let card_filter = state.proposals.filter(\r\n        (proposal) =>\r\n          ((proposal.nome_entidade == null) == type2 || type == \"all\") &&\r\n          (proposal.titulo.toUpperCase().includes(search.toUpperCase()) ||\r\n            search == \"\")\r\n      );\r\n      if (stateF == 1 || stateF == 2 || stateF == 3) {\r\n        card_filter = card_filter.filter(\r\n          (prop) => prop.id_tipo_estado == stateF\r\n        );\r\n      }\r\n      return card_filter;\r\n    },\r\n    getType: (state) => {\r\n      return state.proposals.tipo;\r\n    },\r\n    getNotification: (state) => {\r\n      return state.notifications;\r\n    },\r\n  },\r\n  actions: {\r\n    async createForum(context,payload){\r\n      try{\r\n        \r\n        const response = await axios.post(resource_uri + \"/foruns\",payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n          \r\n        });\r\n        location.reload()\r\n        \r\n        context.commit(\"SETRESP\", response.data);\r\n      }catch(error){\r\n        context.commit('SETRESP', [])\r\n      }\r\n\r\n    },\r\n\r\n\r\n\r\n    async fetchAnswers(context,payload){\r\n      try{\r\n        \r\n        const response = await axios.get(resource_uri + \"/foruns/temas/\"+payload.id_tema+\"/respostas\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        \r\n        context.commit(\"SETRESP\", response.data);\r\n      }catch(error){\r\n        context.commit('SETRESP', [])\r\n      }\r\n    },\r\n    async fetchTemasByIdForum(context,payload){\r\n      try{\r\n        const response = await axios.get(resource_uri + \"/foruns/\"+payload.id_forum+\"/temas/\", {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        context.commit(\"SETTEMAS\", response.data);\r\n      }catch(error){\r\n        context.commit('SETTEMAS', [])\r\n      }\r\n    },\r\n    async fetchMyForuns(context){\r\n      const response = await axios.get(resource_uri + \"/foruns\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETFORUNS\", response.data);\r\n    },\r\n    async fetchMyProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async putUpdateCandidatura(context, payload) {\r\n        await axios.put(resource_uri + '/propostas/' +  payload.id_proposta + '/candidaturas' , payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async putUpdateProposal(context, payload) {\r\n      await axios.put(resource_uri + '/propostas/' + payload.id_proposta + '/data', payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async putAproveProposal(context, payload) {\r\n      console.log(payload)\r\n      await axios.put(resource_uri + '/propostas/' + payload.id_proposta + '/data', payload, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async deleteMyCandidatura(context, payload) {\r\n      await axios.delete(resource_uri + '/propostas/' + payload.id_proposta + '/candidaturas', {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n    async fetchUserById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/users/\" + id);\r\n      context.commit(\"SETUSER\", response.data);\r\n      //context.commit(\"SETUSER\", response.data);\r\n    },\r\n\r\n    async deleteProposals(context, payload) {\r\n      await axios.delete(resource_uri + '/propostas/' + payload.id_proposta, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n    },\r\n\r\n     async fetchUserByType(context, id) {\r\n       const response = await axios.get(resource_uri + \"/users?idTipoUser=\" + id, {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n       })\r\n       context.commit(\"SETUSERTYPE\", response.data)\r\n     },\r\n    async fetchProposals(context) {\r\n      const response = await axios.get(resource_uri + \"/propostas/approved\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      context.commit(\"SETPROPOSALS\", response.data);\r\n    },\r\n    async fetchProposalById(context, id) {\r\n      const response = await axios.get(resource_uri + \"/propostas/\" + id);\r\n      context.commit(\"SETPROPOSAL\", response.data);\r\n    },\r\n    async fetchPorposalForApproval(context){\r\n      const response = await axios.get(resource_uri + \"/propostas/pending\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      })\r\n      context.commit(\"SETPROPOSALBYSTATE\", response.data)\r\n    },\r\n    async fetchMyCandidaturas(context) {\r\n      const response = await axios.get(resource_uri + \"/candidaturas/minhas\", {\r\n        headers: {\r\n          \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n            .accessToken,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      context.commit(\"SETMYCANDIDATURAS\", response.data);\r\n    },\r\n    async eliminar(context, id) {\r\n      context.commit(\"DELETEPROPOSAL\", id);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async login(context, payload) {\r\n      try {\r\n        const loggedUser = await AuthService.login(payload);\r\n        console.log(loggedUser);\r\n        context.commit(\"LOGIN\", loggedUser);\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n      // verificar se este user já existe\r\n      // const user = context.state.users.find(\r\n      //   (user) =>\r\n      //     user.email === payload.email && user.password === payload.password\r\n      // );\r\n      // if (user != undefined) {\r\n      //   // login com sucesso\r\n      //   context.commit(\"LOGIN\", user);\r\n      //   localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n      // } else {\r\n      //   throw \"O seu email ou password estão incorretos\";\r\n      // }\r\n    },\r\n    async logout(context) {\r\n      context.commit(\"LOGOUT\");\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n    async register(context, payload) {\r\n      // verificar se este user já existe\r\n      const user = context.state.users.find(\r\n        (user) => user.email === payload.email\r\n      );\r\n      if (user == undefined) {\r\n        let response = await AuthService.register(payload);\r\n\r\n        context.commit(\"REGISTER\", response);\r\n        //localStorage.setItem(\"users\", JSON.stringify(context.state.users));\r\n      } else {\r\n        return \"Email já existente\";\r\n      }\r\n    },\r\n    async registerProposal(context, payload) {\r\n      const proposal = context.state.proposals.find(\r\n        (proposal) => proposal.titulo == payload.titulo\r\n      );\r\n      if (proposal == undefined) {\r\n        console.log(payload);\r\n        let response = await axios.post(resource_uri + \"/propostas\", payload, {\r\n          headers: {\r\n            \"x-access-token\": JSON.parse(localStorage.getItem(\"user\"))\r\n              .accessToken,\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        //let proposal = payload\r\n        //proposal['id_proposta']=response.\r\n        // console.log(proposal);\r\n        context.commit(\"REGISTERPROPOSAL\", proposal);\r\n        //localStorage.setItem('proposals', JSON.stringify(context.state.proposals))\r\n      } else {\r\n        throw \"Proposta já criada! Por favor reveja os campos\";\r\n      }\r\n    },\r\n\r\n    async registerNotification(context, payload) {\r\n      context.commit(\"REGISTERNOTIFICATION\", payload);\r\n      localStorage.setItem(\r\n        \"notification\",\r\n        JSON.stringify(context.state.notifications)\r\n      );\r\n    },\r\n\r\n    async aprovar(context, data) {\r\n      console.log(data.proposta);\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"aprovado\";\r\n      edited.orientador = data.form.orientador;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async revisao(context, data) {\r\n      let edited = context.state.proposals.filter(\r\n        (proposal) => proposal.id == data.proposta.id\r\n      )[0];\r\n      edited.estado = \"revisao\";\r\n      edited.msgRevisao = data.form.revisao;\r\n      context.commit(\"ALTERARPROP\", edited);\r\n      localStorage.setItem(\r\n        \"proposals\",\r\n        JSON.stringify(context.state.proposals)\r\n      );\r\n    },\r\n    async candidatar(context, data) {\r\n      let application = {\r\n        user: data.form.user,\r\n        id_proposta: data.proposta.id,\r\n        mensagem: data.form.candidatura,\r\n      };\r\n      //console.log(application)\r\n      context.commit(\"CANDIDATURA\", application);\r\n      localStorage.setItem(\r\n        \"applications\",\r\n        JSON.stringify(context.state.applications)\r\n      );\r\n    },\r\n  },\r\n  mutations: {\r\n    SETRESP(state,data){state.answers=data},\r\n    SETTEMAS(state,data){state.temas=data},\r\n    SETFORUNS(state,data){state.foruns=data},\r\n    SETUSER(state, data) {\r\n      state.ProposalUser = data;\r\n    },\r\n    SETUSERTYPE(state, data){\r\n      state.users = data\r\n    },\r\n    SETPROPOSALS(state, data) {\r\n      state.proposals = data;\r\n    },\r\n    SETPROPOSALBYSTATE(state, data) {\r\n      state.proposals = data\r\n    },\r\n    SETPROPOSAL(state, data) {\r\n      state.proposal = data.titulo;\r\n    },\r\n    DELETEPROPOSAL(state, id) {\r\n      state.proposals = state.proposals.filter((proposal) => proposal.id != id);\r\n    },\r\n    CANDIDATURA(state, data) {\r\n      state.applications.push(data);\r\n    },\r\n    ALTERARPROP(state, data) {\r\n      console.log(data);\r\n      state.proposals = state.proposals.map((proposal) =>\r\n        proposal.id == data.id ? data : proposal\r\n      );\r\n    },\r\n    LOGIN(state, user) {\r\n      state.loggedUser = user;\r\n    },\r\n    LOGOUT(state) {\r\n      state.loggedUser = \"\";\r\n    },\r\n    REGISTER(state, user) {\r\n      state.users.push(user);\r\n    },\r\n    REGISTERPROPOSAL(state, proposal) {\r\n      state.proposals.push(proposal);\r\n    },\r\n    REGISTERNOTIFICATION(state, notif) {\r\n      state.notifications.push(notif);\r\n    },\r\n    SETMYCANDIDATURAS(state, proposals) {\r\n      console.log(\"Aqui é commit \" + proposals);\r\n      state.applications = proposals;\r\n      console.log(proposals);\r\n    },\r\n  },\r\n});\r\n"]}]}